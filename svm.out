nohup: ignoring input
len(files) : 660
len(tub_db) : 660
1/100: avg feature norm: 16.483, average value: 579.071
2/100: avg feature norm: 16.566, average value: 580.901
3/100: avg feature norm: 16.382, average value: 585.670
4/100: avg feature norm: 16.511, average value: 593.728
5/100: avg feature norm: 16.462, average value: 597.382
6/100: avg feature norm: 16.460, average value: 591.765
7/100: avg feature norm: 16.556, average value: 585.361
8/100: avg feature norm: 16.560, average value: 584.390
9/100: avg feature norm: 16.611, average value: 581.982
10/100: avg feature norm: 16.679, average value: 581.744
11/100: avg feature norm: 16.631, average value: 577.960
12/100: avg feature norm: 16.615, average value: 576.244
13/100: avg feature norm: 16.576, average value: 577.164
14/100: avg feature norm: 16.563, average value: 576.082
15/100: avg feature norm: 16.652, average value: 575.289
16/100: avg feature norm: 16.622, average value: 574.825
17/100: avg feature norm: 16.625, average value: 574.703
18/100: avg feature norm: 16.598, average value: 575.001
19/100: avg feature norm: 16.638, average value: 576.282
20/100: avg feature norm: 16.709, average value: 578.765
21/100: avg feature norm: 16.674, average value: 580.072
22/100: avg feature norm: 16.700, average value: 579.760
23/100: avg feature norm: 16.639, average value: 577.982
24/100: avg feature norm: 16.590, average value: 575.684
25/100: avg feature norm: 16.626, average value: 575.953
26/100: avg feature norm: 16.617, average value: 575.620
27/100: avg feature norm: 16.618, average value: 575.462
28/100: avg feature norm: 16.649, average value: 576.304
29/100: avg feature norm: 16.638, average value: 576.517
30/100: avg feature norm: 16.655, average value: 577.219
31/100: avg feature norm: 16.683, average value: 578.628
32/100: avg feature norm: 16.656, average value: 578.280
33/100: avg feature norm: 16.653, average value: 577.097
34/100: avg feature norm: 16.665, average value: 577.754
35/100: avg feature norm: 16.679, average value: 577.974
36/100: avg feature norm: 16.695, average value: 577.805
37/100: avg feature norm: 16.652, average value: 578.091
38/100: avg feature norm: 16.671, average value: 578.596
39/100: avg feature norm: 16.630, average value: 578.287
40/100: avg feature norm: 16.618, average value: 577.930
41/100: avg feature norm: 16.600, average value: 577.125
42/100: avg feature norm: 16.543, average value: 576.812
43/100: avg feature norm: 16.554, average value: 576.362
44/100: avg feature norm: 16.566, average value: 576.264
45/100: avg feature norm: 16.558, average value: 575.503
46/100: avg feature norm: 16.564, average value: 576.184
47/100: avg feature norm: 16.554, average value: 575.458
48/100: avg feature norm: 16.543, average value: 575.634
49/100: avg feature norm: 16.570, average value: 575.855
50/100: avg feature norm: 16.584, average value: 576.193
51/100: avg feature norm: 16.591, average value: 576.760
52/100: avg feature norm: 16.604, average value: 577.465
53/100: avg feature norm: 16.597, average value: 577.721
54/100: avg feature norm: 16.589, average value: 577.394
55/100: avg feature norm: 16.565, average value: 577.622
56/100: avg feature norm: 16.575, average value: 578.009
57/100: avg feature norm: 16.570, average value: 578.366
58/100: avg feature norm: 16.569, average value: 578.178
59/100: avg feature norm: 16.570, average value: 578.277
60/100: avg feature norm: 16.568, average value: 577.667
61/100: avg feature norm: 16.583, average value: 577.803
62/100: avg feature norm: 16.577, average value: 578.127
63/100: avg feature norm: 16.583, average value: 578.346
64/100: avg feature norm: 16.577, average value: 578.979
65/100: avg feature norm: 16.571, average value: 578.915
66/100: avg feature norm: 16.564, average value: 578.662
67/100: avg feature norm: 16.562, average value: 578.076
68/100: avg feature norm: 16.563, average value: 578.303
69/100: avg feature norm: 16.561, average value: 578.581
70/100: avg feature norm: 16.549, average value: 578.282
71/100: avg feature norm: 16.567, average value: 578.247
72/100: avg feature norm: 16.550, average value: 578.312
73/100: avg feature norm: 16.554, average value: 578.961
74/100: avg feature norm: 16.559, average value: 578.826
75/100: avg feature norm: 16.560, average value: 578.786
76/100: avg feature norm: 16.561, average value: 579.171
77/100: avg feature norm: 16.563, average value: 578.617
78/100: avg feature norm: 16.562, average value: 578.045
79/100: avg feature norm: 16.568, average value: 578.477
80/100: avg feature norm: 16.558, average value: 578.418
81/100: avg feature norm: 16.554, average value: 578.569
82/100: avg feature norm: 16.562, average value: 578.454
83/100: avg feature norm: 16.569, average value: 577.950
84/100: avg feature norm: 16.585, average value: 578.080
85/100: avg feature norm: 16.566, average value: 578.546
86/100: avg feature norm: 16.563, average value: 578.605
87/100: avg feature norm: 16.553, average value: 578.411
88/100: avg feature norm: 16.556, average value: 578.697
89/100: avg feature norm: 16.553, average value: 578.472
90/100: avg feature norm: 16.548, average value: 578.527
91/100: avg feature norm: 16.559, average value: 577.495
92/100: avg feature norm: 16.570, average value: 577.614
93/100: avg feature norm: 16.569, average value: 577.841
94/100: avg feature norm: 16.573, average value: 578.092
95/100: avg feature norm: 16.561, average value: 578.040
96/100: avg feature norm: 16.571, average value: 577.667
97/100: avg feature norm: 16.559, average value: 577.720
98/100: avg feature norm: 16.565, average value: 577.966
99/100: avg feature norm: 16.574, average value: 578.057
100/100: avg feature norm: 16.576, average value: 578.142
Feature dim: 25088
Feature scale: 1.207
class 1 has 29 positives
class 2 has 31 positives
class 3 has 30 positives
class 4 has 25 positives
class 5 has 39 positives
class 6 has 30 positives
class 7 has 29 positives
class 8 has 39 positives
class 9 has 25 positives
class 10 has 35 positives
class 11 has 30 positives
class 12 has 34 positives
class 13 has 28 positives
class 14 has 27 positives
class 15 has 28 positives
class 16 has 39 positives
class 17 has 29 positives
class 18 has 38 positives
class 19 has 27 positives
class 20 has 39 positives
class 21 has 29 positives
*** EPOCH = 0, VIDEO = 0 *** 
*** EPOCH = 0, VIDEO = 1 *** 
*** EPOCH = 0, VIDEO = 2 *** 
*** EPOCH = 0, VIDEO = 3 *** 
*** EPOCH = 0, VIDEO = 4 *** 
*** EPOCH = 0, VIDEO = 5 *** 
*** EPOCH = 0, VIDEO = 6 *** 
*** EPOCH = 0, VIDEO = 7 *** 
*** EPOCH = 0, VIDEO = 8 *** 
*** EPOCH = 0, VIDEO = 9 *** 
*** EPOCH = 0, VIDEO = 10 *** 
*** EPOCH = 0, VIDEO = 11 *** 
*** EPOCH = 0, VIDEO = 12 *** 
*** EPOCH = 0, VIDEO = 13 *** 
*** EPOCH = 0, VIDEO = 14 *** 
*** EPOCH = 0, VIDEO = 15 *** 
*** EPOCH = 0, VIDEO = 16 *** 
*** EPOCH = 0, VIDEO = 17 *** 
*** EPOCH = 0, VIDEO = 18 *** 
*** EPOCH = 0, VIDEO = 19 *** 
*** EPOCH = 0, VIDEO = 20 *** 
*** EPOCH = 0, VIDEO = 21 *** 
*** EPOCH = 0, VIDEO = 22 *** 
*** EPOCH = 0, VIDEO = 23 *** 
*** EPOCH = 0, VIDEO = 24 *** 
*** EPOCH = 0, VIDEO = 25 *** 
*** EPOCH = 0, VIDEO = 26 *** 
*** EPOCH = 0, VIDEO = 27 *** 
*** EPOCH = 0, VIDEO = 28 *** 
*** EPOCH = 0, VIDEO = 29 *** 
*** EPOCH = 0, VIDEO = 30 *** 
*** EPOCH = 0, VIDEO = 31 *** 
*** EPOCH = 0, VIDEO = 32 *** 
*** EPOCH = 0, VIDEO = 33 *** 
*** EPOCH = 0, VIDEO = 34 *** 
*** EPOCH = 0, VIDEO = 35 *** 
*** EPOCH = 0, VIDEO = 36 *** 
*** EPOCH = 0, VIDEO = 37 *** 
*** EPOCH = 0, VIDEO = 38 *** 
*** EPOCH = 0, VIDEO = 39 *** 
*** EPOCH = 0, VIDEO = 40 *** 
*** EPOCH = 0, VIDEO = 41 *** 
*** EPOCH = 0, VIDEO = 42 *** 
*** EPOCH = 0, VIDEO = 43 *** 
*** EPOCH = 0, VIDEO = 44 *** 
*** EPOCH = 0, VIDEO = 45 *** 
*** EPOCH = 0, VIDEO = 46 *** 
*** EPOCH = 0, VIDEO = 47 *** 
*** EPOCH = 0, VIDEO = 48 *** 
*** EPOCH = 0, VIDEO = 49 *** 
*** EPOCH = 0, VIDEO = 50 *** 
*** EPOCH = 0, VIDEO = 51 *** 
*** EPOCH = 0, VIDEO = 52 *** 
*** EPOCH = 0, VIDEO = 53 *** 
*** EPOCH = 0, VIDEO = 54 *** 
*** EPOCH = 0, VIDEO = 55 *** 
*** EPOCH = 0, VIDEO = 56 *** 
*** EPOCH = 0, VIDEO = 57 *** 
*** EPOCH = 0, VIDEO = 58 *** 
*** EPOCH = 0, VIDEO = 59 *** 
*** EPOCH = 0, VIDEO = 60 *** 
*** EPOCH = 0, VIDEO = 61 *** .......................................................*.*
optimization finished, #iter = 565
Objective value = -0.072315
nSV = 121
...............**
optimization finished, #iter = 158
Objective value = -0.085612
nSV = 138
......*.
optimization finished, #iter = 70
Objective value = -0.056294
nSV = 101
.......*
optimization finished, #iter = 75
Objective value = -0.080818
nSV = 133
..............*.
optimization finished, #iter = 150
Objective value = -0.076688
nSV = 130
.......**
optimization finished, #iter = 75
Objective value = -0.080551
nSV = 140
...............................*
optimization finished, #iter = 314
Objective value = -0.065130
nSV = 126
......*.
optimization finished, #iter = 70
Objective value = -0.079147
nSV = 130
..............................*
optimization finished, #iter = 308
Objective value = -0.058741
nSV = 113
.......**
optimization finished, #iter = 74
Objective value = -0.075385
nSV = 129
....................*...*.*
optimization finished, #iter = 243
Objective value = -0.057989
nSV = 107
.....*.*
optimization finished, #iter = 61
Objective value = -0.079414
nSV = 133

*** EPOCH = 0, VIDEO = 62 *** 
*** EPOCH = 0, VIDEO = 63 *** 
*** EPOCH = 0, VIDEO = 64 *** 
*** EPOCH = 0, VIDEO = 65 *** 
*** EPOCH = 0, VIDEO = 66 *** 
*** EPOCH = 0, VIDEO = 67 *** 
*** EPOCH = 0, VIDEO = 68 *** 
*** EPOCH = 0, VIDEO = 69 *** 
*** EPOCH = 0, VIDEO = 70 *** 
*** EPOCH = 0, VIDEO = 71 *** 
*** EPOCH = 0, VIDEO = 72 *** 
*** EPOCH = 0, VIDEO = 73 *** 
*** EPOCH = 0, VIDEO = 74 *** 
*** EPOCH = 0, VIDEO = 75 *** 
*** EPOCH = 0, VIDEO = 76 *** 
*** EPOCH = 0, VIDEO = 77 *** 
*** EPOCH = 0, VIDEO = 78 *** 
*** EPOCH = 0, VIDEO = 79 *** 
*** EPOCH = 0, VIDEO = 80 *** 
*** EPOCH = 0, VIDEO = 81 *** 
*** EPOCH = 0, VIDEO = 82 *** 
*** EPOCH = 0, VIDEO = 83 *** 
*** EPOCH = 0, VIDEO = 84 *** 
*** EPOCH = 0, VIDEO = 85 *** 
*** EPOCH = 0, VIDEO = 86 *** 
*** EPOCH = 0, VIDEO = 87 *** 
*** EPOCH = 0, VIDEO = 88 *** 
*** EPOCH = 0, VIDEO = 89 *** 
*** EPOCH = 0, VIDEO = 90 *** 
*** EPOCH = 0, VIDEO = 91 *** 
*** EPOCH = 0, VIDEO = 92 *** 
*** EPOCH = 0, VIDEO = 93 *** 
*** EPOCH = 0, VIDEO = 94 *** 
*** EPOCH = 0, VIDEO = 95 *** 
*** EPOCH = 0, VIDEO = 96 *** 
*** EPOCH = 0, VIDEO = 97 *** 
*** EPOCH = 0, VIDEO = 98 *** 
*** EPOCH = 0, VIDEO = 99 *** 
*** EPOCH = 0, VIDEO = 100 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 112
    Cache holds 35 pos examples and 112 neg examples
    19 pos support vectors
    94 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 122
    Cache holds 30 pos examples and 122 neg examples
    19 pos support vectors
    112 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 101
    Cache holds 34 pos examples and 101 neg examples
    14 pos support vectors
    73 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 133
    Cache holds 28 pos examples and 133 neg examples
    20 pos support vectors
    103 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 132
    Cache holds 27 pos examples and 132 neg examples
    20 pos support vectors
    101 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 129
    Cache holds 28 pos examples and 129 neg examples
    13 pos support vectors
    114 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 117
    Cache holds 39 pos examples and 117 neg examples
    22 pos support vectors
    96 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 125
    Cache holds 29 pos examples and 125 neg examples
    17 pos support vectors
    104 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 104
    Cache holds 38 pos examples and 104 neg examples
    10 pos support vectors
    82 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 118
    Cache holds 27 pos examples and 118 neg examples
    11 pos support vectors
    102 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 98
    Cache holds 39 pos examples and 98 neg examples
    14 pos support vectors
    77 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 202 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
    Pruning easy negatives
         before pruning: #neg = 202
         after pruning: #neg = 123
    Cache holds 29 pos examples and 123 neg examples
    12 pos support vectors
    107 neg support vectors
*** EPOCH = 0, VIDEO = 101 *** 
*** EPOCH = 0, VIDEO = 102 *** 
*** EPOCH = 0, VIDEO = 103 *** 
*** EPOCH = 0, VIDEO = 104 *** 
*** EPOCH = 0, VIDEO = 105 *** 
*** EPOCH = 0, VIDEO = 106 *** 
*** EPOCH = 0, VIDEO = 107 *** 
*** EPOCH = 0, VIDEO = 108 *** 
*** EPOCH = 0, VIDEO = 109 *** 
*** EPOCH = 0, VIDEO = 110 *** 
*** EPOCH = 0, VIDEO = 111 *** 
*** EPOCH = 0, VIDEO = 112 *** 
*** EPOCH = 0, VIDEO = 113 *** 
*** EPOCH = 0, VIDEO = 114 *** 
*** EPOCH = 0, VIDEO = 115 *** 
*** EPOCH = 0, VIDEO = 116 *** 
*** EPOCH = 0, VIDEO = 117 *** 
*** EPOCH = 0, VIDEO = 118 *** 
*** EPOCH = 0, VIDEO = 119 *** 
*** EPOCH = 0, VIDEO = 120 *** 
*** EPOCH = 0, VIDEO = 121 *** 
*** EPOCH = 0, VIDEO = 122 *** 
*** EPOCH = 0, VIDEO = 123 *** 
*** EPOCH = 0, VIDEO = 124 *** 
*** EPOCH = 0, VIDEO = 125 *** 
*** EPOCH = 0, VIDEO = 126 *** 
*** EPOCH = 0, VIDEO = 127 *** 
*** EPOCH = 0, VIDEO = 128 *** 
*** EPOCH = 0, VIDEO = 129 *** 
*** EPOCH = 0, VIDEO = 130 *** 
*** EPOCH = 0, VIDEO = 131 *** 
*** EPOCH = 0, VIDEO = 132 *** 
*** EPOCH = 0, VIDEO = 133 *** 
*** EPOCH = 0, VIDEO = 134 *** 
*** EPOCH = 0, VIDEO = 135 *** 
*** EPOCH = 0, VIDEO = 136 *** 
*** EPOCH = 0, VIDEO = 137 *** 
*** EPOCH = 0, VIDEO = 138 *** 
*** EPOCH = 0, VIDEO = 139 *** 
*** EPOCH = 0, VIDEO = 140 *** 
*** EPOCH = 0, VIDEO = 141 *** 
*** EPOCH = 0, VIDEO = 142 *** 
*** EPOCH = 0, VIDEO = 143 *** 
*** EPOCH = 0, VIDEO = 144 *** 
*** EPOCH = 0, VIDEO = 145 *** 
*** EPOCH = 0, VIDEO = 146 *** 
*** EPOCH = 0, VIDEO = 147 *** 
*** EPOCH = 0, VIDEO = 148 *** 
*** EPOCH = 0, VIDEO = 149 *** 
*** EPOCH = 0, VIDEO = 150 *** 
*** EPOCH = 0, VIDEO = 151 *** 
*** EPOCH = 0, VIDEO = 152 *** 
*** EPOCH = 0, VIDEO = 153 *** ....................................................................**.**
optimization finished, #iter = 695
Objective value = -0.116172
nSV = 187
...............**
optimization finished, #iter = 155
Objective value = -0.126754
nSV = 206
.....................**
optimization finished, #iter = 213
Objective value = -0.115593
nSV = 175
..........**
optimization finished, #iter = 106
Objective value = -0.131114
nSV = 217
.........**
optimization finished, #iter = 96
Objective value = -0.143206
nSV = 218
........*
optimization finished, #iter = 84
Objective value = -0.147874
nSV = 229
....................................................................................*.**.*
optimization finished, #iter = 861
Objective value = -0.090647
nSV = 177
.......*
optimization finished, #iter = 72
Objective value = -0.141526
nSV = 213
...........................*.**.
optimization finished, #iter = 290
Objective value = -0.102546
nSV = 177
.......*
optimization finished, #iter = 75
Objective value = -0.119590
nSV = 192
.................**
optimization finished, #iter = 179
Objective value = -0.095612
nSV = 165
......*
optimization finished, #iter = 65
Objective value = -0.130770
nSV = 208

*** EPOCH = 0, VIDEO = 154 *** 
*** EPOCH = 0, VIDEO = 155 *** 
*** EPOCH = 0, VIDEO = 156 *** 
*** EPOCH = 0, VIDEO = 157 *** 
*** EPOCH = 0, VIDEO = 158 *** 
*** EPOCH = 0, VIDEO = 159 *** 
*** EPOCH = 0, VIDEO = 160 *** 
*** EPOCH = 0, VIDEO = 161 *** 
*** EPOCH = 0, VIDEO = 162 *** 
*** EPOCH = 0, VIDEO = 163 *** 
*** EPOCH = 0, VIDEO = 164 *** 
*** EPOCH = 0, VIDEO = 165 *** 
*** EPOCH = 0, VIDEO = 166 *** 
*** EPOCH = 0, VIDEO = 167 *** 
*** EPOCH = 0, VIDEO = 168 *** 
*** EPOCH = 0, VIDEO = 169 *** 
*** EPOCH = 0, VIDEO = 170 *** 
*** EPOCH = 0, VIDEO = 171 *** 
*** EPOCH = 0, VIDEO = 172 *** 
*** EPOCH = 0, VIDEO = 173 *** 
*** EPOCH = 0, VIDEO = 174 *** 
*** EPOCH = 0, VIDEO = 175 *** 
*** EPOCH = 0, VIDEO = 176 *** 
*** EPOCH = 0, VIDEO = 177 *** 
*** EPOCH = 0, VIDEO = 178 *** 
*** EPOCH = 0, VIDEO = 179 *** 
*** EPOCH = 0, VIDEO = 180 *** 
*** EPOCH = 0, VIDEO = 181 *** 
*** EPOCH = 0, VIDEO = 182 *** 
*** EPOCH = 0, VIDEO = 183 *** 
*** EPOCH = 0, VIDEO = 184 *** 
*** EPOCH = 0, VIDEO = 185 *** 
*** EPOCH = 0, VIDEO = 186 *** 
*** EPOCH = 0, VIDEO = 187 *** 
*** EPOCH = 0, VIDEO = 188 *** 
*** EPOCH = 0, VIDEO = 189 *** 
*** EPOCH = 0, VIDEO = 190 *** 
*** EPOCH = 0, VIDEO = 191 *** 
*** EPOCH = 0, VIDEO = 192 *** 
*** EPOCH = 0, VIDEO = 193 *** 
*** EPOCH = 0, VIDEO = 194 *** 
*** EPOCH = 0, VIDEO = 195 *** 
*** EPOCH = 0, VIDEO = 196 *** 
*** EPOCH = 0, VIDEO = 197 *** 
*** EPOCH = 0, VIDEO = 198 *** 
*** EPOCH = 0, VIDEO = 199 *** 
*** EPOCH = 0, VIDEO = 200 *** 
*** EPOCH = 0, VIDEO = 201 *** 
*** EPOCH = 0, VIDEO = 202 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 314 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
    Pruning easy negatives
         before pruning: #neg = 314
         after pruning: #neg = 189
    Cache holds 35 pos examples and 189 neg examples
    11 pos support vectors
    164 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 324 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
    Pruning easy negatives
         before pruning: #neg = 324
         after pruning: #neg = 206
    Cache holds 30 pos examples and 206 neg examples
    25 pos support vectors
    170 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 303 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
    Pruning easy negatives
         before pruning: #neg = 303
         after pruning: #neg = 170
    Cache holds 34 pos examples and 170 neg examples
    14 pos support vectors
    148 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 335 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
    Pruning easy negatives
         before pruning: #neg = 335
         after pruning: #neg = 219
    Cache holds 28 pos examples and 219 neg examples
    17 pos support vectors
    186 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 334 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
    Pruning easy negatives
         before pruning: #neg = 334
         after pruning: #neg = 231
    Cache holds 27 pos examples and 231 neg examples
    19 pos support vectors
    188 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 331 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
    Pruning easy negatives
         before pruning: #neg = 331
         after pruning: #neg = 231
    Cache holds 28 pos examples and 231 neg examples
    15 pos support vectors
    198 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 319 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
    Pruning easy negatives
         before pruning: #neg = 319
         after pruning: #neg = 191
    Cache holds 39 pos examples and 191 neg examples
    12 pos support vectors
    141 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 327 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
    Pruning easy negatives
         before pruning: #neg = 327
         after pruning: #neg = 206
    Cache holds 29 pos examples and 206 neg examples
    13 pos support vectors
    186 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 306 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
    Pruning easy negatives
         before pruning: #neg = 306
         after pruning: #neg = 182
    Cache holds 38 pos examples and 182 neg examples
    12 pos support vectors
    151 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 320 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
    Pruning easy negatives
         before pruning: #neg = 320
         after pruning: #neg = 190
    Cache holds 27 pos examples and 190 neg examples
    8 pos support vectors
    168 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 300 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
    Pruning easy negatives
         before pruning: #neg = 300
         after pruning: #neg = 167
    Cache holds 39 pos examples and 167 neg examples
    21 pos support vectors
    134 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 325 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg).....................................................................**.**
optimization finished, #iter = 708
Objective value = -0.146455
nSV = 231
.......................***
optimization finished, #iter = 237
Objective value = -0.157377
nSV = 250
................*
optimization finished, #iter = 165
Objective value = -0.134286
nSV = 205
...................*.*
optimization finished, #iter = 202
Objective value = -0.170786
nSV = 275
..........*
optimization finished, #iter = 102
Objective value = -0.176157
nSV = 271
......*
optimization finished, #iter = 62
Objective value = -0.181550
nSV = 280
......................................................................*..**.**
optimization finished, #iter = 737
Objective value = -0.109353
nSV = 208

       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
    Pruning easy negatives
         before pruning: #neg = 325
         after pruning: #neg = 211
    Cache holds 29 pos examples and 211 neg examples
    14 pos support vectors
    180 neg support vectors
*** EPOCH = 0, VIDEO = 203 *** 
*** EPOCH = 0, VIDEO = 204 *** 
*** EPOCH = 0, VIDEO = 205 *** 
*** EPOCH = 0, VIDEO = 206 *** 
*** EPOCH = 0, VIDEO = 207 *** 
*** EPOCH = 0, VIDEO = 208 *** 
*** EPOCH = 0, VIDEO = 209 *** 
*** EPOCH = 0, VIDEO = 210 *** 
*** EPOCH = 0, VIDEO = 211 *** 
*** EPOCH = 0, VIDEO = 212 *** 
*** EPOCH = 0, VIDEO = 213 *** 
*** EPOCH = 0, VIDEO = 214 *** 
*** EPOCH = 0, VIDEO = 215 *** 
*** EPOCH = 0, VIDEO = 216 *** 
*** EPOCH = 0, VIDEO = 217 *** 
*** EPOCH = 0, VIDEO = 218 *** 
*** EPOCH = 0, VIDEO = 219 *** 
*** EPOCH = 0, VIDEO = 220 *** 
*** EPOCH = 0, VIDEO = 221 *** 
*** EPOCH = 0, VIDEO = 222 *** 
*** EPOCH = 0, VIDEO = 223 *** 
*** EPOCH = 0, VIDEO = 224 *** 
*** EPOCH = 0, VIDEO = 225 *** 
*** EPOCH = 0, VIDEO = 226 *** 
*** EPOCH = 0, VIDEO = 227 *** 
*** EPOCH = 0, VIDEO = 228 *** 
*** EPOCH = 0, VIDEO = 229 *** 
*** EPOCH = 0, VIDEO = 230 *** 
*** EPOCH = 0, VIDEO = 231 *** 
*** EPOCH = 0, VIDEO = 232 *** 
*** EPOCH = 0, VIDEO = 233 *** 
*** EPOCH = 0, VIDEO = 234 *** 
*** EPOCH = 0, VIDEO = 235 *** 
*** EPOCH = 0, VIDEO = 236 *** 
*** EPOCH = 0, VIDEO = 237 *** 
*** EPOCH = 0, VIDEO = 238 *** 
*** EPOCH = 0, VIDEO = 239 *** 
*** EPOCH = 0, VIDEO = 240 *** 
*** EPOCH = 0, VIDEO = 241 *** 
*** EPOCH = 0, VIDEO = 242 *** 
*** EPOCH = 0, VIDEO = 243 *** 
*** EPOCH = 0, VIDEO = 244 *** 
*** EPOCH = 0, VIDEO = 245 *** 
*** EPOCH = 0, VIDEO = 246 *** 
*** EPOCH = 0, VIDEO = 247 *** 
*** EPOCH = 0, VIDEO = 248 *** 
*** EPOCH = 0, VIDEO = 249 *** 
*** EPOCH = 0, VIDEO = 250 *** 
*** EPOCH = 0, VIDEO = 251 *** 
*** EPOCH = 0, VIDEO = 252 *** 
*** EPOCH = 0, VIDEO = 253 *** 
*** EPOCH = 0, VIDEO = 254 *** 
*** EPOCH = 0, VIDEO = 255 *** 
*** EPOCH = 0, VIDEO = 256 *** 
*** EPOCH = 0, VIDEO = 257 *** 
*** EPOCH = 0, VIDEO = 258 *** 
*** EPOCH = 0, VIDEO = 259 *** 
*** EPOCH = 0, VIDEO = 260 *** 
*** EPOCH = 0, VIDEO = 261 *** 
*** EPOCH = 0, VIDEO = 262 *** 
*** EPOCH = 0, VIDEO = 263 *** 
*** EPOCH = 0, VIDEO = 264 *** 
*** EPOCH = 0, VIDEO = 265 *** 
*** EPOCH = 0, VIDEO = 266 *** 
*** EPOCH = 0, VIDEO = 267 *** 
*** EPOCH = 0, VIDEO = 268 *** 
*** EPOCH = 0, VIDEO = 269 *** 
*** EPOCH = 0, VIDEO = 270 *** 
*** EPOCH = 0, VIDEO = 271 *** 
*** EPOCH = 0, VIDEO = 272 *** 
*** EPOCH = 0, VIDEO = 273 *** 
*** EPOCH = 0, VIDEO = 274 *** 
*** EPOCH = 0, VIDEO = 275 *** 
*** EPOCH = 0, VIDEO = 276 *** 
*** EPOCH = 0, VIDEO = 277 *** 
*** EPOCH = 0, VIDEO = 278 *** 
*** EPOCH = 0, VIDEO = 279 *** 
*** EPOCH = 0, VIDEO = 280 *** 
*** EPOCH = 0, VIDEO = 281 *** 
*** EPOCH = 0, VIDEO = 282 *** 
*** EPOCH = 0, VIDEO = 283 *** 
*** EPOCH = 0, VIDEO = 284 *** 
*** EPOCH = 0, VIDEO = 285 *** 
*** EPOCH = 0, VIDEO = 286 *** 
*** EPOCH = 0, VIDEO = 287 *** 
*** EPOCH = 0, VIDEO = 288 *** 
*** EPOCH = 0, VIDEO = 289 *** 
*** EPOCH = 0, VIDEO = 290 *** 
*** EPOCH = 0, VIDEO = 291 *** 
*** EPOCH = 0, VIDEO = 292 *** 
*** EPOCH = 0, VIDEO = 293 *** 
*** EPOCH = 0, VIDEO = 294 *** 
*** EPOCH = 0, VIDEO = 295 *** 
*** EPOCH = 0, VIDEO = 296 *** 
*** EPOCH = 0, VIDEO = 297 *** 
*** EPOCH = 0, VIDEO = 298 *** 
*** EPOCH = 0, VIDEO = 299 *** 
*** EPOCH = 0, VIDEO = 300 *** 
*** EPOCH = 0, VIDEO = 301 *** 
*** EPOCH = 0, VIDEO = 302 *** 
*** EPOCH = 0, VIDEO = 303 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 391 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
    Pruning easy negatives
         before pruning: #neg = 391
         after pruning: #neg = 237
    Cache holds 35 pos examples and 237 neg examples
    24 pos support vectors
    195 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 408 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
    Pruning easy negatives
         before pruning: #neg = 408
         after pruning: #neg = 260
    Cache holds 30 pos examples and 260 neg examples
    18 pos support vectors
    218 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 372 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
    Pruning easy negatives
         before pruning: #neg = 372
         after pruning: #neg = 206
    Cache holds 34 pos examples and 206 neg examples
    15 pos support vectors
    172 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 421 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
    Pruning easy negatives
         before pruning: #neg = 421
         after pruning: #neg = 276
    Cache holds 28 pos examples and 276 neg examples
    12 pos support vectors
    251 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 433 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
    Pruning easy negatives
         before pruning: #neg = 433
         after pruning: #neg = 280
    Cache holds 27 pos examples and 280 neg examples
    11 pos support vectors
    247 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 433 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
    Pruning easy negatives
         before pruning: #neg = 433
         after pruning: #neg = 287
    Cache holds 28 pos examples and 287 neg examples
    10 pos support vectors
    253 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 393 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg).......**
optimization finished, #iter = 78
Objective value = -0.179184
nSV = 269
.............................*.*
optimization finished, #iter = 305
Objective value = -0.119394
nSV = 210
........*
optimization finished, #iter = 81
Objective value = -0.148736
nSV = 235
.......................*
optimization finished, #iter = 236
Objective value = -0.116832
nSV = 195
.............*.**
optimization finished, #iter = 143
Objective value = -0.168123
nSV = 267
.....................................*
optimization finished, #iter = 376
Objective value = -0.160050
nSV = 257

       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
    Pruning easy negatives
         before pruning: #neg = 393
         after pruning: #neg = 220
    Cache holds 39 pos examples and 220 neg examples
    8 pos support vectors
    181 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 408 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
    Pruning easy negatives
         before pruning: #neg = 408
         after pruning: #neg = 269
    Cache holds 29 pos examples and 269 neg examples
    19 pos support vectors
    239 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 384 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
    Pruning easy negatives
         before pruning: #neg = 384
         after pruning: #neg = 213
    Cache holds 38 pos examples and 213 neg examples
    14 pos support vectors
    167 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 392 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
    Pruning easy negatives
         before pruning: #neg = 392
         after pruning: #neg = 237
    Cache holds 27 pos examples and 237 neg examples
    22 pos support vectors
    203 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 369 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
    Pruning easy negatives
         before pruning: #neg = 369
         after pruning: #neg = 195
    Cache holds 39 pos examples and 195 neg examples
    13 pos support vectors
    172 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 413 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
    Pruning easy negatives
         before pruning: #neg = 413
         after pruning: #neg = 260
    Cache holds 29 pos examples and 260 neg examples
    8 pos support vectors
    240 neg support vectors
*** EPOCH = 0, VIDEO = 304 *** 
*** EPOCH = 0, VIDEO = 305 *** 
*** EPOCH = 0, VIDEO = 306 *** 
*** EPOCH = 0, VIDEO = 307 *** 
*** EPOCH = 0, VIDEO = 308 *** 
*** EPOCH = 0, VIDEO = 309 *** 
*** EPOCH = 0, VIDEO = 310 *** 
*** EPOCH = 0, VIDEO = 311 *** 
*** EPOCH = 0, VIDEO = 312 *** 
*** EPOCH = 0, VIDEO = 313 *** 
*** EPOCH = 0, VIDEO = 314 *** 
*** EPOCH = 0, VIDEO = 315 *** 
*** EPOCH = 0, VIDEO = 316 *** 
*** EPOCH = 0, VIDEO = 317 *** 
*** EPOCH = 0, VIDEO = 318 *** 
*** EPOCH = 0, VIDEO = 319 *** 
*** EPOCH = 0, VIDEO = 320 *** 
*** EPOCH = 0, VIDEO = 321 *** 
*** EPOCH = 0, VIDEO = 322 *** 
*** EPOCH = 0, VIDEO = 323 *** 
*** EPOCH = 0, VIDEO = 324 *** 
*** EPOCH = 0, VIDEO = 325 *** 
*** EPOCH = 0, VIDEO = 326 *** 
*** EPOCH = 0, VIDEO = 327 *** 
*** EPOCH = 0, VIDEO = 328 *** 
*** EPOCH = 0, VIDEO = 329 *** 
*** EPOCH = 0, VIDEO = 330 *** 
*** EPOCH = 0, VIDEO = 331 *** 
*** EPOCH = 0, VIDEO = 332 *** 
*** EPOCH = 0, VIDEO = 333 *** 
*** EPOCH = 0, VIDEO = 334 *** 
*** EPOCH = 0, VIDEO = 335 *** 
*** EPOCH = 0, VIDEO = 336 *** 
*** EPOCH = 0, VIDEO = 337 *** 
*** EPOCH = 0, VIDEO = 338 *** 
*** EPOCH = 0, VIDEO = 339 *** 
*** EPOCH = 0, VIDEO = 340 *** 
*** EPOCH = 0, VIDEO = 341 *** 
*** EPOCH = 0, VIDEO = 342 *** 
*** EPOCH = 0, VIDEO = 343 *** 
*** EPOCH = 0, VIDEO = 344 *** 
*** EPOCH = 0, VIDEO = 345 *** 
*** EPOCH = 0, VIDEO = 346 *** 
*** EPOCH = 0, VIDEO = 347 *** 
*** EPOCH = 0, VIDEO = 348 *** 
*** EPOCH = 0, VIDEO = 349 *** 
*** EPOCH = 0, VIDEO = 350 *** 
*** EPOCH = 0, VIDEO = 351 *** 
*** EPOCH = 0, VIDEO = 352 *** 
*** EPOCH = 0, VIDEO = 353 *** 
*** EPOCH = 0, VIDEO = 354 *** 
*** EPOCH = 0, VIDEO = 355 *** 
*** EPOCH = 0, VIDEO = 356 *** 
*** EPOCH = 0, VIDEO = 357 *** 
*** EPOCH = 0, VIDEO = 358 *** 
*** EPOCH = 0, VIDEO = 359 *** 
*** EPOCH = 0, VIDEO = 360 *** 
*** EPOCH = 0, VIDEO = 361 *** 
*** EPOCH = 0, VIDEO = 362 *** 
*** EPOCH = 0, VIDEO = 363 *** 
*** EPOCH = 0, VIDEO = 364 *** 
*** EPOCH = 0, VIDEO = 365 *** 
*** EPOCH = 0, VIDEO = 366 *** 
*** EPOCH = 0, VIDEO = 367 *** 
*** EPOCH = 0, VIDEO = 368 *** 
*** EPOCH = 0, VIDEO = 369 *** 
*** EPOCH = 0, VIDEO = 370 *** 
*** EPOCH = 0, VIDEO = 371 *** 
*** EPOCH = 0, VIDEO = 372 *** 
*** EPOCH = 0, VIDEO = 373 *** 
*** EPOCH = 0, VIDEO = 374 *** 
*** EPOCH = 0, VIDEO = 375 *** 
*** EPOCH = 0, VIDEO = 376 *** 
*** EPOCH = 0, VIDEO = 377 *** 
*** EPOCH = 0, VIDEO = 378 *** 
*** EPOCH = 0, VIDEO = 379 *** 
*** EPOCH = 0, VIDEO = 380 *** 
*** EPOCH = 0, VIDEO = 381 *** 
*** EPOCH = 0, VIDEO = 382 *** 
*** EPOCH = 0, VIDEO = 383 *** 
*** EPOCH = 0, VIDEO = 384 *** 
*** EPOCH = 0, VIDEO = 385 *** 
*** EPOCH = 0, VIDEO = 386 *** 
*** EPOCH = 0, VIDEO = 387 *** 
*** EPOCH = 0, VIDEO = 388 *** 
*** EPOCH = 0, VIDEO = 389 *** 
*** EPOCH = 0, VIDEO = 390 *** 
*** EPOCH = 0, VIDEO = 391 *** 
*** EPOCH = 0, VIDEO = 392 *** 
*** EPOCH = 0, VIDEO = 393 *** 
*** EPOCH = 0, VIDEO = 394 *** 
*** EPOCH = 0, VIDEO = 395 *** 
*** EPOCH = 0, VIDEO = 396 *** 
*** EPOCH = 0, VIDEO = 397 *** 
*** EPOCH = 0, VIDEO = 398 *** 
*** EPOCH = 0, VIDEO = 399 *** 
*** EPOCH = 0, VIDEO = 400 *** 
*** EPOCH = 0, VIDEO = 401 *** 
*** EPOCH = 0, VIDEO = 402 *** 
*** EPOCH = 0, VIDEO = 403 *** 
*** EPOCH = 0, VIDEO = 404 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 439 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
    Pruning easy negatives
         before pruning: #neg = 439
         after pruning: #neg = 264
    Cache holds 35 pos examples and 264 neg examples............................*
optimization finished, #iter = 286
Objective value = -0.166076
nSV = 270
........................*.*..*
optimization finished, #iter = 278
Objective value = -0.138844
nSV = 214
...........................*
optimization finished, #iter = 279
Objective value = -0.177903
nSV = 292
...........*
optimization finished, #iter = 119
Objective value = -0.183035
nSV = 291
.......*
optimization finished, #iter = 73
Objective value = -0.189967
nSV = 301
...................................................................................*
optimization finished, #iter = 831
Objective value = -0.114474
nSV = 215
........*
optimization finished, #iter = 83
Objective value = -0.187002
nSV = 289
.................................*
optimization finished, #iter = 336
Objective value = -0.123447
nSV = 217
........*
optimization finished, #iter = 82
Objective value = -0.155622
nSV = 253
..................***
optimization finished, #iter = 188
Objective value = -0.121797
nSV = 205

    21 pos support vectors
    211 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 462 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
    Pruning easy negatives
         before pruning: #neg = 462
         after pruning: #neg = 275
    Cache holds 30 pos examples and 275 neg examples
    11 pos support vectors
    242 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 408 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
    Pruning easy negatives
         before pruning: #neg = 408
         after pruning: #neg = 221
    Cache holds 34 pos examples and 221 neg examples
    22 pos support vectors
    180 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 478 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
    Pruning easy negatives
         before pruning: #neg = 478
         after pruning: #neg = 306
    Cache holds 28 pos examples and 306 neg examples
    14 pos support vectors
    266 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 482 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
    Pruning easy negatives
         before pruning: #neg = 482
         after pruning: #neg = 305
    Cache holds 27 pos examples and 305 neg examples
    19 pos support vectors
    254 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 489 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
    Pruning easy negatives
         before pruning: #neg = 489
         after pruning: #neg = 306
    Cache holds 28 pos examples and 306 neg examples
    19 pos support vectors
    269 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 422 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
    Pruning easy negatives
         before pruning: #neg = 422
         after pruning: #neg = 232
    Cache holds 39 pos examples and 232 neg examples
    15 pos support vectors
    185 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 471 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
    Pruning easy negatives
         before pruning: #neg = 471
         after pruning: #neg = 281
    Cache holds 29 pos examples and 281 neg examples
    23 pos support vectors
    248 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 415 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
    Pruning easy negatives
         before pruning: #neg = 415
         after pruning: #neg = 235
    Cache holds 38 pos examples and 235 neg examples
    8 pos support vectors
    188 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 439 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
    Pruning easy negatives
         before pruning: #neg = 439
         after pruning: #neg = 246
    Cache holds 27 pos examples and 246 neg examples
    5 pos support vectors
    227 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 397 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg).........**.
optimization finished, #iter = 100
Objective value = -0.175683
nSV = 283
................................................................****
optimization finished, #iter = 648
Objective value = -0.187188
nSV = 292
........................*.*
optimization finished, #iter = 251
Objective value = -0.186492
nSV = 306
...............*
optimization finished, #iter = 153
Objective value = -0.170492
nSV = 257
............................**
optimization finished, #iter = 283
Objective value = -0.209885
nSV = 336

       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
    Pruning easy negatives
         before pruning: #neg = 397
         after pruning: #neg = 220
    Cache holds 39 pos examples and 220 neg examples
    19 pos support vectors
    168 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 462 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
    Pruning easy negatives
         before pruning: #neg = 462
         after pruning: #neg = 286
    Cache holds 29 pos examples and 286 neg examples
    21 pos support vectors
    242 neg support vectors
*** EPOCH = 0, VIDEO = 405 *** 
*** EPOCH = 0, VIDEO = 406 *** 
*** EPOCH = 0, VIDEO = 407 *** 
*** EPOCH = 0, VIDEO = 408 *** 
*** EPOCH = 0, VIDEO = 409 *** 
*** EPOCH = 0, VIDEO = 410 *** 
*** EPOCH = 0, VIDEO = 411 *** 
*** EPOCH = 0, VIDEO = 412 *** 
*** EPOCH = 0, VIDEO = 413 *** 
*** EPOCH = 0, VIDEO = 414 *** 
*** EPOCH = 0, VIDEO = 415 *** 
*** EPOCH = 0, VIDEO = 416 *** 
*** EPOCH = 0, VIDEO = 417 *** 
*** EPOCH = 0, VIDEO = 418 *** 
*** EPOCH = 0, VIDEO = 419 *** 
*** EPOCH = 0, VIDEO = 420 *** 
*** EPOCH = 0, VIDEO = 421 *** 
*** EPOCH = 0, VIDEO = 422 *** 
*** EPOCH = 0, VIDEO = 423 *** 
*** EPOCH = 0, VIDEO = 424 *** 
*** EPOCH = 0, VIDEO = 425 *** 
*** EPOCH = 0, VIDEO = 426 *** 
*** EPOCH = 0, VIDEO = 427 *** 
*** EPOCH = 0, VIDEO = 428 *** 
*** EPOCH = 0, VIDEO = 429 *** 
*** EPOCH = 0, VIDEO = 430 *** 
*** EPOCH = 0, VIDEO = 431 *** 
*** EPOCH = 0, VIDEO = 432 *** 
*** EPOCH = 0, VIDEO = 433 *** 
*** EPOCH = 0, VIDEO = 434 *** 
*** EPOCH = 0, VIDEO = 435 *** 
*** EPOCH = 0, VIDEO = 436 *** 
*** EPOCH = 0, VIDEO = 437 *** 
*** EPOCH = 0, VIDEO = 438 *** 
*** EPOCH = 0, VIDEO = 439 *** 
*** EPOCH = 0, VIDEO = 440 *** 
*** EPOCH = 0, VIDEO = 441 *** 
*** EPOCH = 0, VIDEO = 442 *** 
*** EPOCH = 0, VIDEO = 443 *** 
*** EPOCH = 0, VIDEO = 444 *** 
*** EPOCH = 0, VIDEO = 445 *** 
*** EPOCH = 0, VIDEO = 446 *** 
*** EPOCH = 0, VIDEO = 447 *** 
*** EPOCH = 0, VIDEO = 448 *** 
*** EPOCH = 0, VIDEO = 449 *** 
*** EPOCH = 0, VIDEO = 450 *** 
*** EPOCH = 0, VIDEO = 451 *** 
*** EPOCH = 0, VIDEO = 452 *** 
*** EPOCH = 0, VIDEO = 453 *** 
*** EPOCH = 0, VIDEO = 454 *** 
*** EPOCH = 0, VIDEO = 455 *** 
*** EPOCH = 0, VIDEO = 456 *** 
*** EPOCH = 0, VIDEO = 457 *** 
*** EPOCH = 0, VIDEO = 458 *** 
*** EPOCH = 0, VIDEO = 459 *** 
*** EPOCH = 0, VIDEO = 460 *** 
*** EPOCH = 0, VIDEO = 461 *** 
*** EPOCH = 0, VIDEO = 462 *** 
*** EPOCH = 0, VIDEO = 463 *** 
*** EPOCH = 0, VIDEO = 464 *** 
*** EPOCH = 0, VIDEO = 465 *** 
*** EPOCH = 0, VIDEO = 466 *** 
*** EPOCH = 0, VIDEO = 467 *** 
*** EPOCH = 0, VIDEO = 468 *** 
*** EPOCH = 0, VIDEO = 469 *** 
*** EPOCH = 0, VIDEO = 470 *** 
*** EPOCH = 0, VIDEO = 471 *** 
*** EPOCH = 0, VIDEO = 472 *** 
*** EPOCH = 0, VIDEO = 473 *** 
*** EPOCH = 0, VIDEO = 474 *** 
*** EPOCH = 0, VIDEO = 475 *** 
*** EPOCH = 0, VIDEO = 476 *** 
*** EPOCH = 0, VIDEO = 477 *** 
*** EPOCH = 0, VIDEO = 478 *** 
*** EPOCH = 0, VIDEO = 479 *** 
*** EPOCH = 0, VIDEO = 480 *** 
*** EPOCH = 0, VIDEO = 481 *** 
*** EPOCH = 0, VIDEO = 482 *** 
*** EPOCH = 0, VIDEO = 483 *** 
*** EPOCH = 0, VIDEO = 484 *** 
*** EPOCH = 0, VIDEO = 485 *** 
*** EPOCH = 0, VIDEO = 486 *** 
*** EPOCH = 0, VIDEO = 487 *** 
*** EPOCH = 0, VIDEO = 488 *** 
*** EPOCH = 0, VIDEO = 489 *** 
*** EPOCH = 0, VIDEO = 490 *** 
*** EPOCH = 0, VIDEO = 491 *** 
*** EPOCH = 0, VIDEO = 492 *** 
*** EPOCH = 0, VIDEO = 493 *** 
*** EPOCH = 0, VIDEO = 494 *** 
*** EPOCH = 0, VIDEO = 495 *** 
*** EPOCH = 0, VIDEO = 496 *** 
*** EPOCH = 0, VIDEO = 497 *** 
*** EPOCH = 0, VIDEO = 498 *** 
*** EPOCH = 0, VIDEO = 499 *** 
*** EPOCH = 0, VIDEO = 500 *** 
*** EPOCH = 0, VIDEO = 501 *** 
*** EPOCH = 0, VIDEO = 502 *** 
*** EPOCH = 0, VIDEO = 503 *** 
*** EPOCH = 0, VIDEO = 504 *** 
*** EPOCH = 0, VIDEO = 505 *** 
*** EPOCH = 0, VIDEO = 506 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 466 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
    Pruning easy negatives
         before pruning: #neg = 466
         after pruning: #neg = 309
    Cache holds 35 pos examples and 309 neg examples
    23 pos support vectors
    256 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 477 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
    Pruning easy negatives
         before pruning: #neg = 477
         after pruning: #neg = 329
    Cache holds 30 pos examples and 329 neg examples
    8 pos support vectors
    279 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 423 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
    Pruning easy negatives
         before pruning: #neg = 423
         after pruning: #neg = 259
    Cache holds 34 pos examples and 259 neg examples
    16 pos support vectors
    228 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 508 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)...........***
optimization finished, #iter = 116
Objective value = -0.238303
nSV = 362
......*.
optimization finished, #iter = 70
Objective value = -0.234612
nSV = 358
....................................................................................*
optimization finished, #iter = 844
Objective value = -0.130541
nSV = 245
.......*.
optimization finished, #iter = 80
Objective value = -0.221241
nSV = 330
.......................**
optimization finished, #iter = 237
Objective value = -0.146254
nSV = 255
.........**
optimization finished, #iter = 96
Objective value = -0.178110
nSV = 291
.......................*
optimization finished, #iter = 237
Objective value = -0.141659
nSV = 233
...........*
optimization finished, #iter = 114
Objective value = -0.206340
nSV = 322

       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
    Pruning easy negatives
         before pruning: #neg = 508
         after pruning: #neg = 364
    Cache holds 28 pos examples and 364 neg examples
    22 pos support vectors
    298 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 507 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
    Pruning easy negatives
         before pruning: #neg = 507
         after pruning: #neg = 374
    Cache holds 27 pos examples and 374 neg examples
    16 pos support vectors
    326 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 508 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
    Pruning easy negatives
         before pruning: #neg = 508
         after pruning: #neg = 381
    Cache holds 28 pos examples and 381 neg examples
    12 pos support vectors
    326 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 434 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
    Pruning easy negatives
         before pruning: #neg = 434
         after pruning: #neg = 272
    Cache holds 39 pos examples and 272 neg examples
    27 pos support vectors
    197 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 483 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
    Pruning easy negatives
         before pruning: #neg = 483
         after pruning: #neg = 337
    Cache holds 29 pos examples and 337 neg examples
    16 pos support vectors
    300 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 437 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
    Pruning easy negatives
         before pruning: #neg = 437
         after pruning: #neg = 267
    Cache holds 38 pos examples and 267 neg examples
    14 pos support vectors
    227 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 448 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
    Pruning easy negatives
         before pruning: #neg = 448
         after pruning: #neg = 303
    Cache holds 27 pos examples and 303 neg examples
    15 pos support vectors
    250 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 422 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
    Pruning easy negatives
         before pruning: #neg = 422
         after pruning: #neg = 245
    Cache holds 39 pos examples and 245 neg examples
    16 pos support vectors
    204 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 488 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)...............................*
optimization finished, #iter = 317
Objective value = -0.202536
nSV = 315
.........................**
optimization finished, #iter = 258
Objective value = -0.202792
nSV = 334
...............**
optimization finished, #iter = 159
Objective value = -0.181670
nSV = 273
............**
optimization finished, #iter = 125
Objective value = -0.224132
nSV = 369

       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
    Pruning easy negatives
         before pruning: #neg = 488
         after pruning: #neg = 337
    Cache holds 29 pos examples and 337 neg examples
    20 pos support vectors
    292 neg support vectors
*** EPOCH = 0, VIDEO = 507 *** 
*** EPOCH = 0, VIDEO = 508 *** 
*** EPOCH = 0, VIDEO = 509 *** 
*** EPOCH = 0, VIDEO = 510 *** 
*** EPOCH = 0, VIDEO = 511 *** 
*** EPOCH = 0, VIDEO = 512 *** 
*** EPOCH = 0, VIDEO = 513 *** 
*** EPOCH = 0, VIDEO = 514 *** 
*** EPOCH = 0, VIDEO = 515 *** 
*** EPOCH = 0, VIDEO = 516 *** 
*** EPOCH = 0, VIDEO = 517 *** 
*** EPOCH = 0, VIDEO = 518 *** 
*** EPOCH = 0, VIDEO = 519 *** 
*** EPOCH = 0, VIDEO = 520 *** 
*** EPOCH = 0, VIDEO = 521 *** 
*** EPOCH = 0, VIDEO = 522 *** 
*** EPOCH = 0, VIDEO = 523 *** 
*** EPOCH = 0, VIDEO = 524 *** 
*** EPOCH = 0, VIDEO = 525 *** 
*** EPOCH = 0, VIDEO = 526 *** 
*** EPOCH = 0, VIDEO = 527 *** 
*** EPOCH = 0, VIDEO = 528 *** 
*** EPOCH = 0, VIDEO = 529 *** 
*** EPOCH = 0, VIDEO = 530 *** 
*** EPOCH = 0, VIDEO = 531 *** 
*** EPOCH = 0, VIDEO = 532 *** 
*** EPOCH = 0, VIDEO = 533 *** 
*** EPOCH = 0, VIDEO = 534 *** 
*** EPOCH = 0, VIDEO = 535 *** 
*** EPOCH = 0, VIDEO = 536 *** 
*** EPOCH = 0, VIDEO = 537 *** 
*** EPOCH = 0, VIDEO = 538 *** 
*** EPOCH = 0, VIDEO = 539 *** 
*** EPOCH = 0, VIDEO = 540 *** 
*** EPOCH = 0, VIDEO = 541 *** 
*** EPOCH = 0, VIDEO = 542 *** 
*** EPOCH = 0, VIDEO = 543 *** 
*** EPOCH = 0, VIDEO = 544 *** 
*** EPOCH = 0, VIDEO = 545 *** 
*** EPOCH = 0, VIDEO = 546 *** 
*** EPOCH = 0, VIDEO = 547 *** 
*** EPOCH = 0, VIDEO = 548 *** 
*** EPOCH = 0, VIDEO = 549 *** 
*** EPOCH = 0, VIDEO = 550 *** 
*** EPOCH = 0, VIDEO = 551 *** 
*** EPOCH = 0, VIDEO = 552 *** 
*** EPOCH = 0, VIDEO = 553 *** 
*** EPOCH = 0, VIDEO = 554 *** 
*** EPOCH = 0, VIDEO = 555 *** 
*** EPOCH = 0, VIDEO = 556 *** 
*** EPOCH = 0, VIDEO = 557 *** 
*** EPOCH = 0, VIDEO = 558 *** 
*** EPOCH = 0, VIDEO = 559 *** 
*** EPOCH = 0, VIDEO = 560 *** 
*** EPOCH = 0, VIDEO = 561 *** 
*** EPOCH = 0, VIDEO = 562 *** 
*** EPOCH = 0, VIDEO = 563 *** 
*** EPOCH = 0, VIDEO = 564 *** 
*** EPOCH = 0, VIDEO = 565 *** 
*** EPOCH = 0, VIDEO = 566 *** 
*** EPOCH = 0, VIDEO = 567 *** 
*** EPOCH = 0, VIDEO = 568 *** 
*** EPOCH = 0, VIDEO = 569 *** 
*** EPOCH = 0, VIDEO = 570 *** 
*** EPOCH = 0, VIDEO = 571 *** 
*** EPOCH = 0, VIDEO = 572 *** 
*** EPOCH = 0, VIDEO = 573 *** 
*** EPOCH = 0, VIDEO = 574 *** 
*** EPOCH = 0, VIDEO = 575 *** 
*** EPOCH = 0, VIDEO = 576 *** 
*** EPOCH = 0, VIDEO = 577 *** 
*** EPOCH = 0, VIDEO = 578 *** 
*** EPOCH = 0, VIDEO = 579 *** 
*** EPOCH = 0, VIDEO = 580 *** 
*** EPOCH = 0, VIDEO = 581 *** 
*** EPOCH = 0, VIDEO = 582 *** 
*** EPOCH = 0, VIDEO = 583 *** 
*** EPOCH = 0, VIDEO = 584 *** 
*** EPOCH = 0, VIDEO = 585 *** 
*** EPOCH = 0, VIDEO = 586 *** 
*** EPOCH = 0, VIDEO = 587 *** 
*** EPOCH = 0, VIDEO = 588 *** 
*** EPOCH = 0, VIDEO = 589 *** 
*** EPOCH = 0, VIDEO = 590 *** 
*** EPOCH = 0, VIDEO = 591 *** 
*** EPOCH = 0, VIDEO = 592 *** 
*** EPOCH = 0, VIDEO = 593 *** 
*** EPOCH = 0, VIDEO = 594 *** 
*** EPOCH = 0, VIDEO = 595 *** 
*** EPOCH = 0, VIDEO = 596 *** 
*** EPOCH = 0, VIDEO = 597 *** 
*** EPOCH = 0, VIDEO = 598 *** 
*** EPOCH = 0, VIDEO = 599 *** 
*** EPOCH = 0, VIDEO = 600 *** 
*** EPOCH = 0, VIDEO = 601 *** 
*** EPOCH = 0, VIDEO = 602 *** 
*** EPOCH = 0, VIDEO = 603 *** 
*** EPOCH = 0, VIDEO = 604 *** 
*** EPOCH = 0, VIDEO = 605 *** 
*** EPOCH = 0, VIDEO = 606 *** 
*** EPOCH = 0, VIDEO = 607 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 511 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
    Pruning easy negatives
         before pruning: #neg = 511
         after pruning: #neg = 332
    Cache holds 35 pos examples and 332 neg examples
    17 pos support vectors
    288 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 531 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
    Pruning easy negatives
         before pruning: #neg = 531
         after pruning: #neg = 360
    Cache holds 30 pos examples and 360 neg examples
    7 pos support vectors
    307 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 461 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
    Pruning easy negatives
         before pruning: #neg = 461
         after pruning: #neg = 275
    Cache holds 34 pos examples and 275 neg examples
    10 pos support vectors
    249 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 566 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)............*.*
optimization finished, #iter = 131
Objective value = -0.253791
nSV = 386
..........*
optimization finished, #iter = 105
Objective value = -0.254861
nSV = 392
....................................................................................................
optimization finished, #iter = 1000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -0.152810
nSV = 276
.......*
optimization finished, #iter = 79
Objective value = -0.239105
nSV = 362
...............................*
optimization finished, #iter = 317
Objective value = -0.155117
nSV = 267
........*
optimization finished, #iter = 82
Objective value = -0.188847
nSV = 312
........................*
optimization finished, #iter = 246
Objective value = -0.157812
nSV = 261

       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
    Pruning easy negatives
         before pruning: #neg = 566
         after pruning: #neg = 394
    Cache holds 28 pos examples and 394 neg examples
    18 pos support vectors
    329 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 576 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
    Pruning easy negatives
         before pruning: #neg = 576
         after pruning: #neg = 408
    Cache holds 27 pos examples and 408 neg examples
    14 pos support vectors
    353 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 583 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
    Pruning easy negatives
         before pruning: #neg = 583
         after pruning: #neg = 417
    Cache holds 28 pos examples and 417 neg examples
    20 pos support vectors
    356 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 474 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
    Pruning easy negatives
         before pruning: #neg = 474
         after pruning: #neg = 296
    Cache holds 39 pos examples and 296 neg examples
    17 pos support vectors
    237 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 539 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
    Pruning easy negatives
         before pruning: #neg = 539
         after pruning: #neg = 368
    Cache holds 29 pos examples and 368 neg examples
    19 pos support vectors
    324 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 469 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
    Pruning easy negatives
         before pruning: #neg = 469
         after pruning: #neg = 291
    Cache holds 38 pos examples and 291 neg examples
    22 pos support vectors
    223 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 505 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
    Pruning easy negatives
         before pruning: #neg = 505
         after pruning: #neg = 330
    Cache holds 27 pos examples and 330 neg examples
    12 pos support vectors
    275 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 447 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg).............**
optimization finished, #iter = 137
Objective value = -0.222404
nSV = 356
....................................**
optimization finished, #iter = 368
Objective value = -0.209463
nSV = 336
............................**.*
optimization finished, #iter = 291
Objective value = -0.217003
nSV = 361
...........*
optimization finished, #iter = 119
Objective value = -0.189799
nSV = 298

       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
    Pruning easy negatives
         before pruning: #neg = 447
         after pruning: #neg = 260
    Cache holds 39 pos examples and 260 neg examples
    26 pos support vectors
    215 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 539 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
    Pruning easy negatives
         before pruning: #neg = 539
         after pruning: #neg = 363
    Cache holds 29 pos examples and 363 neg examples
    10 pos support vectors
    322 neg support vectors
*** EPOCH = 0, VIDEO = 608 *** 
*** EPOCH = 0, VIDEO = 609 *** 
*** EPOCH = 0, VIDEO = 610 *** 
*** EPOCH = 0, VIDEO = 611 *** 
*** EPOCH = 0, VIDEO = 612 *** 
*** EPOCH = 0, VIDEO = 613 *** 
*** EPOCH = 0, VIDEO = 614 *** 
*** EPOCH = 0, VIDEO = 615 *** 
*** EPOCH = 0, VIDEO = 616 *** 
*** EPOCH = 0, VIDEO = 617 *** 
*** EPOCH = 0, VIDEO = 618 *** 
*** EPOCH = 0, VIDEO = 619 *** 
*** EPOCH = 0, VIDEO = 620 *** 
*** EPOCH = 0, VIDEO = 621 *** 
*** EPOCH = 0, VIDEO = 622 *** 
*** EPOCH = 0, VIDEO = 623 *** 
*** EPOCH = 0, VIDEO = 624 *** 
*** EPOCH = 0, VIDEO = 625 *** 
*** EPOCH = 0, VIDEO = 626 *** 
*** EPOCH = 0, VIDEO = 627 *** 
*** EPOCH = 0, VIDEO = 628 *** 
*** EPOCH = 0, VIDEO = 629 *** 
*** EPOCH = 0, VIDEO = 630 *** 
*** EPOCH = 0, VIDEO = 631 *** 
*** EPOCH = 0, VIDEO = 632 *** 
*** EPOCH = 0, VIDEO = 633 *** 
*** EPOCH = 0, VIDEO = 634 *** 
*** EPOCH = 0, VIDEO = 635 *** 
*** EPOCH = 0, VIDEO = 636 *** 
*** EPOCH = 0, VIDEO = 637 *** 
*** EPOCH = 0, VIDEO = 638 *** 
*** EPOCH = 0, VIDEO = 639 *** 
*** EPOCH = 0, VIDEO = 640 *** 
*** EPOCH = 0, VIDEO = 641 *** 
*** EPOCH = 0, VIDEO = 642 *** 
*** EPOCH = 0, VIDEO = 643 *** 
*** EPOCH = 0, VIDEO = 644 *** 
*** EPOCH = 0, VIDEO = 645 *** 
*** EPOCH = 0, VIDEO = 646 *** 
*** EPOCH = 0, VIDEO = 647 *** 
*** EPOCH = 0, VIDEO = 648 *** 
*** EPOCH = 0, VIDEO = 649 *** 
*** EPOCH = 0, VIDEO = 650 *** 
*** EPOCH = 0, VIDEO = 651 *** 
*** EPOCH = 0, VIDEO = 652 *** 
*** EPOCH = 0, VIDEO = 653 *** 
*** EPOCH = 0, VIDEO = 654 *** 
*** EPOCH = 0, VIDEO = 655 *** 
*** EPOCH = 0, VIDEO = 656 *** 
*** EPOCH = 0, VIDEO = 657 *** 
*** EPOCH = 0, VIDEO = 658 *** 
*** EPOCH = 0, VIDEO = 659 *** 
train_with_hard_negatives: 660/660 
*** EPOCH = 1, VIDEO = 0 *** 
*** EPOCH = 1, VIDEO = 1 *** 
*** EPOCH = 1, VIDEO = 2 *** 
*** EPOCH = 1, VIDEO = 3 *** 
*** EPOCH = 1, VIDEO = 4 *** 
*** EPOCH = 1, VIDEO = 5 *** 
*** EPOCH = 1, VIDEO = 6 *** 
*** EPOCH = 1, VIDEO = 7 *** 
*** EPOCH = 1, VIDEO = 8 *** 
*** EPOCH = 1, VIDEO = 9 *** 
*** EPOCH = 1, VIDEO = 10 *** 
*** EPOCH = 1, VIDEO = 11 *** 
*** EPOCH = 1, VIDEO = 12 *** 
*** EPOCH = 1, VIDEO = 13 *** 
*** EPOCH = 1, VIDEO = 14 *** 
*** EPOCH = 1, VIDEO = 15 *** 
*** EPOCH = 1, VIDEO = 16 *** 
*** EPOCH = 1, VIDEO = 17 *** 
*** EPOCH = 1, VIDEO = 18 *** 
*** EPOCH = 1, VIDEO = 19 *** 
*** EPOCH = 1, VIDEO = 20 *** 
*** EPOCH = 1, VIDEO = 21 *** 
*** EPOCH = 1, VIDEO = 22 *** 
*** EPOCH = 1, VIDEO = 23 *** 
*** EPOCH = 1, VIDEO = 24 *** 
*** EPOCH = 1, VIDEO = 25 *** 
*** EPOCH = 1, VIDEO = 26 *** 
*** EPOCH = 1, VIDEO = 27 *** 
*** EPOCH = 1, VIDEO = 28 *** 
*** EPOCH = 1, VIDEO = 29 *** 
*** EPOCH = 1, VIDEO = 30 *** 
*** EPOCH = 1, VIDEO = 31 *** 
*** EPOCH = 1, VIDEO = 32 *** 
*** EPOCH = 1, VIDEO = 33 *** 
*** EPOCH = 1, VIDEO = 34 *** 
*** EPOCH = 1, VIDEO = 35 *** 
*** EPOCH = 1, VIDEO = 36 *** 
*** EPOCH = 1, VIDEO = 37 *** 
*** EPOCH = 1, VIDEO = 38 *** 
*** EPOCH = 1, VIDEO = 39 *** 
*** EPOCH = 1, VIDEO = 40 *** 
*** EPOCH = 1, VIDEO = 41 *** 
*** EPOCH = 1, VIDEO = 42 *** 
*** EPOCH = 1, VIDEO = 43 *** 
*** EPOCH = 1, VIDEO = 44 *** 
*** EPOCH = 1, VIDEO = 45 *** 
*** EPOCH = 1, VIDEO = 46 *** 
*** EPOCH = 1, VIDEO = 47 *** 
*** EPOCH = 1, VIDEO = 48 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 534 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
    Pruning easy negatives
         before pruning: #neg = 534
         after pruning: #neg = 358
    Cache holds 35 pos examples and 358 neg examples
    16 pos support vectors
    297 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 562 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
    Pruning easy negatives
         before pruning: #neg = 562
         after pruning: #neg = 386
    Cache holds 30 pos examples and 386 neg examples
    22 pos support vectors
    305 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 477 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)...............................***
optimization finished, #iter = 316
Objective value = -0.234177
nSV = 386
.............*
optimization finished, #iter = 131
Objective value = -0.269741
nSV = 418
..........*
optimization finished, #iter = 104
Objective value = -0.277802
nSV = 426
....................................................................................................
optimization finished, #iter = 1000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -0.154761
nSV = 282
.......*.
optimization finished, #iter = 80
Objective value = -0.252196
nSV = 391
..............................*.**
optimization finished, #iter = 317
Objective value = -0.159335
nSV = 286

       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
    Pruning easy negatives
         before pruning: #neg = 477
         after pruning: #neg = 300
    Cache holds 34 pos examples and 300 neg examples
    19 pos support vectors
    250 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 596 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
    Pruning easy negatives
         before pruning: #neg = 596
         after pruning: #neg = 432
    Cache holds 28 pos examples and 432 neg examples
    24 pos support vectors
    331 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 610 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
    Pruning easy negatives
         before pruning: #neg = 610
         after pruning: #neg = 438
    Cache holds 27 pos examples and 438 neg examples
    9 pos support vectors
    388 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 619 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
    Pruning easy negatives
         before pruning: #neg = 619
         after pruning: #neg = 440
    Cache holds 28 pos examples and 440 neg examples
    12 pos support vectors
    398 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 498 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
    Pruning easy negatives
         before pruning: #neg = 498
         after pruning: #neg = 322
    Cache holds 39 pos examples and 322 neg examples
    8 pos support vectors
    253 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 570 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
    Pruning easy negatives
         before pruning: #neg = 570
         after pruning: #neg = 400
    Cache holds 29 pos examples and 400 neg examples
    14 pos support vectors
    358 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 493 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg)........**
optimization finished, #iter = 88
Objective value = -0.201217
nSV = 335
.....................*
optimization finished, #iter = 212
Objective value = -0.167101
nSV = 273
.......*
optimization finished, #iter = 76
Objective value = -0.234907
nSV = 378
.......................................*.*
optimization finished, #iter = 402
Objective value = -0.216428
nSV = 349

    Pruning easy negatives
         before pruning: #neg = 493
         after pruning: #neg = 313
    Cache holds 38 pos examples and 313 neg examples
    17 pos support vectors
    248 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 532 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
    Pruning easy negatives
         before pruning: #neg = 532
         after pruning: #neg = 345
    Cache holds 27 pos examples and 345 neg examples
    16 pos support vectors
    295 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 462 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
    Pruning easy negatives
         before pruning: #neg = 462
         after pruning: #neg = 281
    Cache holds 39 pos examples and 281 neg examples
    26 pos support vectors
    232 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 565 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
    Pruning easy negatives
         before pruning: #neg = 565
         after pruning: #neg = 397
    Cache holds 29 pos examples and 397 neg examples
    22 pos support vectors
    330 neg support vectors
*** EPOCH = 1, VIDEO = 49 *** 
*** EPOCH = 1, VIDEO = 50 *** 
*** EPOCH = 1, VIDEO = 51 *** 
*** EPOCH = 1, VIDEO = 52 *** 
*** EPOCH = 1, VIDEO = 53 *** 
*** EPOCH = 1, VIDEO = 54 *** 
*** EPOCH = 1, VIDEO = 55 *** 
*** EPOCH = 1, VIDEO = 56 *** 
*** EPOCH = 1, VIDEO = 57 *** 
*** EPOCH = 1, VIDEO = 58 *** 
*** EPOCH = 1, VIDEO = 59 *** 
*** EPOCH = 1, VIDEO = 60 *** 
*** EPOCH = 1, VIDEO = 61 *** 
*** EPOCH = 1, VIDEO = 62 *** 
*** EPOCH = 1, VIDEO = 63 *** 
*** EPOCH = 1, VIDEO = 64 *** 
*** EPOCH = 1, VIDEO = 65 *** 
*** EPOCH = 1, VIDEO = 66 *** 
*** EPOCH = 1, VIDEO = 67 *** 
*** EPOCH = 1, VIDEO = 68 *** 
*** EPOCH = 1, VIDEO = 69 *** 
*** EPOCH = 1, VIDEO = 70 *** 
*** EPOCH = 1, VIDEO = 71 *** 
*** EPOCH = 1, VIDEO = 72 *** 
*** EPOCH = 1, VIDEO = 73 *** 
*** EPOCH = 1, VIDEO = 74 *** 
*** EPOCH = 1, VIDEO = 75 *** 
*** EPOCH = 1, VIDEO = 76 *** 
*** EPOCH = 1, VIDEO = 77 *** 
*** EPOCH = 1, VIDEO = 78 *** 
*** EPOCH = 1, VIDEO = 79 *** 
*** EPOCH = 1, VIDEO = 80 *** 
*** EPOCH = 1, VIDEO = 81 *** 
*** EPOCH = 1, VIDEO = 82 *** 
*** EPOCH = 1, VIDEO = 83 *** 
*** EPOCH = 1, VIDEO = 84 *** 
*** EPOCH = 1, VIDEO = 85 *** 
*** EPOCH = 1, VIDEO = 86 *** 
*** EPOCH = 1, VIDEO = 87 *** 
*** EPOCH = 1, VIDEO = 88 *** 
*** EPOCH = 1, VIDEO = 89 *** 
*** EPOCH = 1, VIDEO = 90 *** 
*** EPOCH = 1, VIDEO = 91 *** 
*** EPOCH = 1, VIDEO = 92 *** 
*** EPOCH = 1, VIDEO = 93 *** 
*** EPOCH = 1, VIDEO = 94 *** 
*** EPOCH = 1, VIDEO = 95 *** 
*** EPOCH = 1, VIDEO = 96 *** 
*** EPOCH = 1, VIDEO = 97 *** 
*** EPOCH = 1, VIDEO = 98 *** 
*** EPOCH = 1, VIDEO = 99 *** 
*** EPOCH = 1, VIDEO = 100 *** 
*** EPOCH = 1, VIDEO = 101 *** 
*** EPOCH = 1, VIDEO = 102 *** 
*** EPOCH = 1, VIDEO = 103 *** 
*** EPOCH = 1, VIDEO = 104 *** 
*** EPOCH = 1, VIDEO = 105 *** 
*** EPOCH = 1, VIDEO = 106 *** 
*** EPOCH = 1, VIDEO = 107 *** 
*** EPOCH = 1, VIDEO = 108 *** 
*** EPOCH = 1, VIDEO = 109 *** 
*** EPOCH = 1, VIDEO = 110 *** 
*** EPOCH = 1, VIDEO = 111 *** 
*** EPOCH = 1, VIDEO = 112 *** 
*** EPOCH = 1, VIDEO = 113 *** 
*** EPOCH = 1, VIDEO = 114 *** 
*** EPOCH = 1, VIDEO = 115 *** 
*** EPOCH = 1, VIDEO = 116 *** 
*** EPOCH = 1, VIDEO = 117 *** 
*** EPOCH = 1, VIDEO = 118 *** 
*** EPOCH = 1, VIDEO = 119 *** 
*** EPOCH = 1, VIDEO = 120 *** 
*** EPOCH = 1, VIDEO = 121 *** 
*** EPOCH = 1, VIDEO = 122 *** 
*** EPOCH = 1, VIDEO = 123 *** 
*** EPOCH = 1, VIDEO = 124 *** 
*** EPOCH = 1, VIDEO = 125 *** 
*** EPOCH = 1, VIDEO = 126 *** 
*** EPOCH = 1, VIDEO = 127 *** 
*** EPOCH = 1, VIDEO = 128 *** 
*** EPOCH = 1, VIDEO = 129 *** 
*** EPOCH = 1, VIDEO = 130 *** 
*** EPOCH = 1, VIDEO = 131 *** 
*** EPOCH = 1, VIDEO = 132 *** 
*** EPOCH = 1, VIDEO = 133 *** 
*** EPOCH = 1, VIDEO = 134 *** 
*** EPOCH = 1, VIDEO = 135 *** 
*** EPOCH = 1, VIDEO = 136 *** 
*** EPOCH = 1, VIDEO = 137 *** 
*** EPOCH = 1, VIDEO = 138 *** 
*** EPOCH = 1, VIDEO = 139 *** 
*** EPOCH = 1, VIDEO = 140 *** 
*** EPOCH = 1, VIDEO = 141 *** 
*** EPOCH = 1, VIDEO = 142 *** 
*** EPOCH = 1, VIDEO = 143 *** 
*** EPOCH = 1, VIDEO = 144 *** 
*** EPOCH = 1, VIDEO = 145 *** 
*** EPOCH = 1, VIDEO = 146 *** 
*** EPOCH = 1, VIDEO = 147 *** 
*** EPOCH = 1, VIDEO = 148 *** 
*** EPOCH = 1, VIDEO = 149 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 560 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)............................*
optimization finished, #iter = 284
Objective value = -0.225661
nSV = 380
............................................*
optimization finished, #iter = 447
Objective value = -0.218322
nSV = 330
...........................***.
optimization finished, #iter = 280
Objective value = -0.242021
nSV = 413
...........*.*
optimization finished, #iter = 121
Objective value = -0.291399
nSV = 449
..........*
optimization finished, #iter = 104
Objective value = -0.297661
nSV = 464
........................................................................*
optimization finished, #iter = 726
Objective value = -0.157532
nSV = 303

       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
       7: meanAcc=0.966 -- pos wrong:     1/   35; neg wrong:    22/  560;       obj val: 0.272 = 0.000  (posUnscaled) + 0.125 (neg) + 0.147 (reg)
    Pruning easy negatives
         before pruning: #neg = 560
         after pruning: #neg = 385
    Cache holds 35 pos examples and 385 neg examples
    18 pos support vectors
    322 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 588 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
       7: meanAcc=0.952 -- pos wrong:     1/   30; neg wrong:    37/  588;       obj val: 0.298 = 0.000  (posUnscaled) + 0.151 (neg) + 0.147 (reg)
    Pruning easy negatives
         before pruning: #neg = 588
         after pruning: #neg = 427
    Cache holds 30 pos examples and 427 neg examples
    22 pos support vectors
    331 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 502 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
       7: meanAcc=0.938 -- pos wrong:     0/   34; neg wrong:    62/  502;       obj val: 0.276 = 0.000  (posUnscaled) + 0.183 (neg) + 0.094 (reg)
    Pruning easy negatives
         before pruning: #neg = 502
         after pruning: #neg = 343
    Cache holds 34 pos examples and 343 neg examples
    19 pos support vectors
    286 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 634 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
       7: meanAcc=0.968 -- pos wrong:     0/   28; neg wrong:    41/  634;       obj val: 0.310 = 0.000  (posUnscaled) + 0.172 (neg) + 0.138 (reg)
    Pruning easy negatives
         before pruning: #neg = 634
         after pruning: #neg = 478
    Cache holds 28 pos examples and 478 neg examples
    23 pos support vectors
    346 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 640 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
       7: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:   100/  640;       obj val: 0.436 = 0.000  (posUnscaled) + 0.254 (neg) + 0.182 (reg)
    Pruning easy negatives
         before pruning: #neg = 640
         after pruning: #neg = 483
    Cache holds 27 pos examples and 483 neg examples
    24 pos support vectors
    403 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 642 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
       7: meanAcc=0.929 -- pos wrong:     0/   28; neg wrong:    91/  642;       obj val: 0.461 = 0.000  (posUnscaled) + 0.241 (neg) + 0.219 (reg)
    Pruning easy negatives
         before pruning: #neg = 642
         after pruning: #neg = 483
    Cache holds 28 pos examples and 483 neg examples
    18 pos support vectors
    427 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 524 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)........*
optimization finished, #iter = 88
Objective value = -0.267354
nSV = 417
............................**.****
optimization finished, #iter = 297
Objective value = -0.164428
nSV = 292
........*
optimization finished, #iter = 87
Objective value = -0.210209
nSV = 350
.................*
optimization finished, #iter = 173
Objective value = -0.173288
nSV = 284
........*
optimization finished, #iter = 81
Objective value = -0.245977
nSV = 400

       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
       7: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  524;       obj val: 0.250 = 0.000  (posUnscaled) + 0.086 (neg) + 0.163 (reg)
    Pruning easy negatives
         before pruning: #neg = 524
         after pruning: #neg = 339
    Cache holds 39 pos examples and 339 neg examples
    10 pos support vectors
    267 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 602 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
       7: meanAcc=0.951 -- pos wrong:     0/   29; neg wrong:    59/  602;       obj val: 0.327 = 0.000  (posUnscaled) + 0.195 (neg) + 0.132 (reg)
    Pruning easy negatives
         before pruning: #neg = 602
         after pruning: #neg = 445
    Cache holds 29 pos examples and 445 neg examples
    23 pos support vectors
    362 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 515 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg)
       7: meanAcc=0.990 -- pos wrong:     0/   38; neg wrong:    10/  515;       obj val: 0.215 = 0.000  (posUnscaled) + 0.085 (neg) + 0.131 (reg)
    Pruning easy negatives
         before pruning: #neg = 515
         after pruning: #neg = 338
    Cache holds 38 pos examples and 338 neg examples
    15 pos support vectors
    256 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 547 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
       7: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    36/  547;       obj val: 0.267 = 0.000  (posUnscaled) + 0.145 (neg) + 0.122 (reg)
    Pruning easy negatives
         before pruning: #neg = 547
         after pruning: #neg = 386
    Cache holds 27 pos examples and 386 neg examples
    12 pos support vectors
    315 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 483 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
       7: meanAcc=0.964 -- pos wrong:     0/   39; neg wrong:    35/  483;       obj val: 0.223 = 0.000  (posUnscaled) + 0.113 (neg) + 0.110 (reg)
    Pruning easy negatives
         before pruning: #neg = 483
         after pruning: #neg = 305
    Cache holds 39 pos examples and 305 neg examples
    17 pos support vectors
    243 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 599 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
       7: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    69/  599;       obj val: 0.320 = 0.000  (posUnscaled) + 0.193 (neg) + 0.127 (reg)..........................................................*.***
optimization finished, #iter = 596
Objective value = -0.228411
nSV = 383
.........................................................*
optimization finished, #iter = 572
Objective value = -0.238567
nSV = 409
........................................*
optimization finished, #iter = 407
Objective value = -0.227435
nSV = 351

    Pruning easy negatives
         before pruning: #neg = 599
         after pruning: #neg = 436
    Cache holds 29 pos examples and 436 neg examples
    19 pos support vectors
    348 neg support vectors
*** EPOCH = 1, VIDEO = 150 *** 
*** EPOCH = 1, VIDEO = 151 *** 
*** EPOCH = 1, VIDEO = 152 *** 
*** EPOCH = 1, VIDEO = 153 *** 
*** EPOCH = 1, VIDEO = 154 *** 
*** EPOCH = 1, VIDEO = 155 *** 
*** EPOCH = 1, VIDEO = 156 *** 
*** EPOCH = 1, VIDEO = 157 *** 
*** EPOCH = 1, VIDEO = 158 *** 
*** EPOCH = 1, VIDEO = 159 *** 
*** EPOCH = 1, VIDEO = 160 *** 
*** EPOCH = 1, VIDEO = 161 *** 
*** EPOCH = 1, VIDEO = 162 *** 
*** EPOCH = 1, VIDEO = 163 *** 
*** EPOCH = 1, VIDEO = 164 *** 
*** EPOCH = 1, VIDEO = 165 *** 
*** EPOCH = 1, VIDEO = 166 *** 
*** EPOCH = 1, VIDEO = 167 *** 
*** EPOCH = 1, VIDEO = 168 *** 
*** EPOCH = 1, VIDEO = 169 *** 
*** EPOCH = 1, VIDEO = 170 *** 
*** EPOCH = 1, VIDEO = 171 *** 
*** EPOCH = 1, VIDEO = 172 *** 
*** EPOCH = 1, VIDEO = 173 *** 
*** EPOCH = 1, VIDEO = 174 *** 
*** EPOCH = 1, VIDEO = 175 *** 
*** EPOCH = 1, VIDEO = 176 *** 
*** EPOCH = 1, VIDEO = 177 *** 
*** EPOCH = 1, VIDEO = 178 *** 
*** EPOCH = 1, VIDEO = 179 *** 
*** EPOCH = 1, VIDEO = 180 *** 
*** EPOCH = 1, VIDEO = 181 *** 
*** EPOCH = 1, VIDEO = 182 *** 
*** EPOCH = 1, VIDEO = 183 *** 
*** EPOCH = 1, VIDEO = 184 *** 
*** EPOCH = 1, VIDEO = 185 *** 
*** EPOCH = 1, VIDEO = 186 *** 
*** EPOCH = 1, VIDEO = 187 *** 
*** EPOCH = 1, VIDEO = 188 *** 
*** EPOCH = 1, VIDEO = 189 *** 
*** EPOCH = 1, VIDEO = 190 *** 
*** EPOCH = 1, VIDEO = 191 *** 
*** EPOCH = 1, VIDEO = 192 *** 
*** EPOCH = 1, VIDEO = 193 *** 
*** EPOCH = 1, VIDEO = 194 *** 
*** EPOCH = 1, VIDEO = 195 *** 
*** EPOCH = 1, VIDEO = 196 *** 
*** EPOCH = 1, VIDEO = 197 *** 
*** EPOCH = 1, VIDEO = 198 *** 
*** EPOCH = 1, VIDEO = 199 *** 
*** EPOCH = 1, VIDEO = 200 *** 
*** EPOCH = 1, VIDEO = 201 *** 
*** EPOCH = 1, VIDEO = 202 *** 
*** EPOCH = 1, VIDEO = 203 *** 
*** EPOCH = 1, VIDEO = 204 *** 
*** EPOCH = 1, VIDEO = 205 *** 
*** EPOCH = 1, VIDEO = 206 *** 
*** EPOCH = 1, VIDEO = 207 *** 
*** EPOCH = 1, VIDEO = 208 *** 
*** EPOCH = 1, VIDEO = 209 *** 
*** EPOCH = 1, VIDEO = 210 *** 
*** EPOCH = 1, VIDEO = 211 *** 
*** EPOCH = 1, VIDEO = 212 *** 
*** EPOCH = 1, VIDEO = 213 *** 
*** EPOCH = 1, VIDEO = 214 *** 
*** EPOCH = 1, VIDEO = 215 *** 
*** EPOCH = 1, VIDEO = 216 *** 
*** EPOCH = 1, VIDEO = 217 *** 
*** EPOCH = 1, VIDEO = 218 *** 
*** EPOCH = 1, VIDEO = 219 *** 
*** EPOCH = 1, VIDEO = 220 *** 
*** EPOCH = 1, VIDEO = 221 *** 
*** EPOCH = 1, VIDEO = 222 *** 
*** EPOCH = 1, VIDEO = 223 *** 
*** EPOCH = 1, VIDEO = 224 *** 
*** EPOCH = 1, VIDEO = 225 *** 
*** EPOCH = 1, VIDEO = 226 *** 
*** EPOCH = 1, VIDEO = 227 *** 
*** EPOCH = 1, VIDEO = 228 *** 
*** EPOCH = 1, VIDEO = 229 *** 
*** EPOCH = 1, VIDEO = 230 *** 
*** EPOCH = 1, VIDEO = 231 *** 
*** EPOCH = 1, VIDEO = 232 *** 
*** EPOCH = 1, VIDEO = 233 *** 
*** EPOCH = 1, VIDEO = 234 *** 
*** EPOCH = 1, VIDEO = 235 *** 
*** EPOCH = 1, VIDEO = 236 *** 
*** EPOCH = 1, VIDEO = 237 *** 
*** EPOCH = 1, VIDEO = 238 *** 
*** EPOCH = 1, VIDEO = 239 *** 
*** EPOCH = 1, VIDEO = 240 *** 
*** EPOCH = 1, VIDEO = 241 *** 
*** EPOCH = 1, VIDEO = 242 *** 
*** EPOCH = 1, VIDEO = 243 *** 
*** EPOCH = 1, VIDEO = 244 *** 
*** EPOCH = 1, VIDEO = 245 *** 
*** EPOCH = 1, VIDEO = 246 *** 
*** EPOCH = 1, VIDEO = 247 *** 
*** EPOCH = 1, VIDEO = 248 *** 
*** EPOCH = 1, VIDEO = 249 *** 
*** EPOCH = 1, VIDEO = 250 *** 
*** EPOCH = 1, VIDEO = 251 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 587 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
       7: meanAcc=0.966 -- pos wrong:     1/   35; neg wrong:    22/  560;       obj val: 0.272 = 0.000  (posUnscaled) + 0.125 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    18/  587;       obj val: 0.290 = 0.000  (posUnscaled) + 0.126 (neg) + 0.165 (reg)
    Pruning easy negatives
         before pruning: #neg = 587
         after pruning: #neg = 418
    Cache holds 35 pos examples and 418 neg examples
    14 pos support vectors
    338 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 629 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
       7: meanAcc=0.952 -- pos wrong:     1/   30; neg wrong:    37/  588;       obj val: 0.298 = 0.000  (posUnscaled) + 0.151 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    38/  629;       obj val: 0.323 = 0.000  (posUnscaled) + 0.159 (neg) + 0.164 (reg)
    Pruning easy negatives
         before pruning: #neg = 629
         after pruning: #neg = 470
    Cache holds 30 pos examples and 470 neg examples
    6 pos support vectors
    379 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 545 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
       7: meanAcc=0.938 -- pos wrong:     0/   34; neg wrong:    62/  502;       obj val: 0.276 = 0.000  (posUnscaled) + 0.183 (neg) + 0.094 (reg)
       8: meanAcc=0.947 -- pos wrong:     0/   34; neg wrong:    58/  545;       obj val: 0.291 = 0.000  (posUnscaled) + 0.187 (neg) + 0.104 (reg)
    Pruning easy negatives
         before pruning: #neg = 545
         after pruning: #neg = 374................................**
optimization finished, #iter = 326
Objective value = -0.257190
nSV = 438
............*
optimization finished, #iter = 123
Objective value = -0.306661
nSV = 487
..........*
optimization finished, #iter = 102
Objective value = -0.313812
nSV = 503
.....................................................................**.*.*.*
optimization finished, #iter = 721
Objective value = -0.162063
nSV = 313
.......*.*
optimization finished, #iter = 81
Objective value = -0.290825
nSV = 455

    Cache holds 34 pos examples and 374 neg examples
    18 pos support vectors
    310 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 680 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
       7: meanAcc=0.968 -- pos wrong:     0/   28; neg wrong:    41/  634;       obj val: 0.310 = 0.000  (posUnscaled) + 0.172 (neg) + 0.138 (reg)
       8: meanAcc=0.974 -- pos wrong:     0/   28; neg wrong:    36/  680;       obj val: 0.332 = 0.000  (posUnscaled) + 0.183 (neg) + 0.149 (reg)
    Pruning easy negatives
         before pruning: #neg = 680
         after pruning: #neg = 511
    Cache holds 28 pos examples and 511 neg examples
    20 pos support vectors
    375 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 685 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
       7: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:   100/  640;       obj val: 0.436 = 0.000  (posUnscaled) + 0.254 (neg) + 0.182 (reg)
       8: meanAcc=0.927 -- pos wrong:     0/   27; neg wrong:   100/  685;       obj val: 0.455 = 0.000  (posUnscaled) + 0.264 (neg) + 0.190 (reg)
    Pruning easy negatives
         before pruning: #neg = 685
         after pruning: #neg = 518
    Cache holds 27 pos examples and 518 neg examples
    19 pos support vectors
    423 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 685 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
       7: meanAcc=0.929 -- pos wrong:     0/   28; neg wrong:    91/  642;       obj val: 0.461 = 0.000  (posUnscaled) + 0.241 (neg) + 0.219 (reg)
       8: meanAcc=0.931 -- pos wrong:     0/   28; neg wrong:    94/  685;       obj val: 0.471 = 0.000  (posUnscaled) + 0.246 (neg) + 0.225 (reg)
    Pruning easy negatives
         before pruning: #neg = 685
         after pruning: #neg = 529
    Cache holds 28 pos examples and 529 neg examples
    19 pos support vectors
    435 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 541 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
       7: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  524;       obj val: 0.250 = 0.000  (posUnscaled) + 0.086 (neg) + 0.163 (reg)
       8: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  541;       obj val: 0.257 = 0.000  (posUnscaled) + 0.088 (neg) + 0.169 (reg)
    Pruning easy negatives
         before pruning: #neg = 541
         after pruning: #neg = 366
    Cache holds 39 pos examples and 366 neg examples
    17 pos support vectors
    259 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 647 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
       7: meanAcc=0.951 -- pos wrong:     0/   29; neg wrong:    59/  602;       obj val: 0.327 = 0.000  (posUnscaled) + 0.195 (neg) + 0.132 (reg)
       8: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    71/  647;       obj val: 0.364 = 0.000  (posUnscaled) + 0.223 (neg) + 0.141 (reg)
    Pruning easy negatives
         before pruning: #neg = 647
         after pruning: #neg = 486
    Cache holds 29 pos examples and 486 neg examples
    17 pos support vectors
    407 neg support vectors...............................*.*.**
optimization finished, #iter = 333
Objective value = -0.175263
nSV = 313
........*
optimization finished, #iter = 85
Objective value = -0.225146
nSV = 383
...............*.***
optimization finished, #iter = 167
Objective value = -0.184189
nSV = 308
........*
optimization finished, #iter = 88
Objective value = -0.266186
nSV = 435

>>> Updating 19 detector <<<
Cache holds 38 pos examples and 540 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg)
       7: meanAcc=0.990 -- pos wrong:     0/   38; neg wrong:    10/  515;       obj val: 0.215 = 0.000  (posUnscaled) + 0.085 (neg) + 0.131 (reg)
       8: meanAcc=0.989 -- pos wrong:     0/   38; neg wrong:    12/  540;       obj val: 0.230 = 0.000  (posUnscaled) + 0.087 (neg) + 0.144 (reg)
    Pruning easy negatives
         before pruning: #neg = 540
         after pruning: #neg = 350
    Cache holds 38 pos examples and 350 neg examples
    21 pos support vectors
    260 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 588 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
       7: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    36/  547;       obj val: 0.267 = 0.000  (posUnscaled) + 0.145 (neg) + 0.122 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    39/  588;       obj val: 0.289 = 0.000  (posUnscaled) + 0.158 (neg) + 0.131 (reg)
    Pruning easy negatives
         before pruning: #neg = 588
         after pruning: #neg = 419
    Cache holds 27 pos examples and 419 neg examples
    26 pos support vectors
    320 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 507 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
       7: meanAcc=0.964 -- pos wrong:     0/   39; neg wrong:    35/  483;       obj val: 0.223 = 0.000  (posUnscaled) + 0.113 (neg) + 0.110 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    33/  507;       obj val: 0.243 = 0.000  (posUnscaled) + 0.116 (neg) + 0.127 (reg)
    Pruning easy negatives
         before pruning: #neg = 507
         after pruning: #neg = 328
    Cache holds 39 pos examples and 328 neg examples
    25 pos support vectors
    267 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 638 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
       7: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    69/  599;       obj val: 0.320 = 0.000  (posUnscaled) + 0.193 (neg) + 0.127 (reg)
       8: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    83/  638;       obj val: 0.349 = 0.000  (posUnscaled) + 0.212 (neg) + 0.137 (reg)
    Pruning easy negatives
         before pruning: #neg = 638
         after pruning: #neg = 474
    Cache holds 29 pos examples and 474 neg examples
    16 pos support vectors
    390 neg support vectors
*** EPOCH = 1, VIDEO = 252 *** 
*** EPOCH = 1, VIDEO = 253 *** 
*** EPOCH = 1, VIDEO = 254 *** 
*** EPOCH = 1, VIDEO = 255 *** 
*** EPOCH = 1, VIDEO = 256 *** 
*** EPOCH = 1, VIDEO = 257 *** 
*** EPOCH = 1, VIDEO = 258 *** 
*** EPOCH = 1, VIDEO = 259 *** 
*** EPOCH = 1, VIDEO = 260 *** 
*** EPOCH = 1, VIDEO = 261 *** 
*** EPOCH = 1, VIDEO = 262 *** 
*** EPOCH = 1, VIDEO = 263 *** 
*** EPOCH = 1, VIDEO = 264 *** 
*** EPOCH = 1, VIDEO = 265 *** 
*** EPOCH = 1, VIDEO = 266 *** 
*** EPOCH = 1, VIDEO = 267 *** 
*** EPOCH = 1, VIDEO = 268 *** 
*** EPOCH = 1, VIDEO = 269 *** 
*** EPOCH = 1, VIDEO = 270 *** 
*** EPOCH = 1, VIDEO = 271 *** 
*** EPOCH = 1, VIDEO = 272 *** 
*** EPOCH = 1, VIDEO = 273 *** 
*** EPOCH = 1, VIDEO = 274 *** 
*** EPOCH = 1, VIDEO = 275 *** 
*** EPOCH = 1, VIDEO = 276 *** 
*** EPOCH = 1, VIDEO = 277 *** 
*** EPOCH = 1, VIDEO = 278 *** 
*** EPOCH = 1, VIDEO = 279 *** 
*** EPOCH = 1, VIDEO = 280 *** 
*** EPOCH = 1, VIDEO = 281 *** 
*** EPOCH = 1, VIDEO = 282 *** 
*** EPOCH = 1, VIDEO = 283 *** 
*** EPOCH = 1, VIDEO = 284 *** 
*** EPOCH = 1, VIDEO = 285 *** 
*** EPOCH = 1, VIDEO = 286 *** 
*** EPOCH = 1, VIDEO = 287 *** 
*** EPOCH = 1, VIDEO = 288 *** 
*** EPOCH = 1, VIDEO = 289 *** 
*** EPOCH = 1, VIDEO = 290 *** 
*** EPOCH = 1, VIDEO = 291 *** 
*** EPOCH = 1, VIDEO = 292 *** 
*** EPOCH = 1, VIDEO = 293 *** 
*** EPOCH = 1, VIDEO = 294 *** 
*** EPOCH = 1, VIDEO = 295 *** 
*** EPOCH = 1, VIDEO = 296 *** 
*** EPOCH = 1, VIDEO = 297 *** 
*** EPOCH = 1, VIDEO = 298 *** 
*** EPOCH = 1, VIDEO = 299 *** 
*** EPOCH = 1, VIDEO = 300 *** 
*** EPOCH = 1, VIDEO = 301 *** 
*** EPOCH = 1, VIDEO = 302 *** 
*** EPOCH = 1, VIDEO = 303 *** 
*** EPOCH = 1, VIDEO = 304 *** 
*** EPOCH = 1, VIDEO = 305 *** ...............................................................*
optimization finished, #iter = 635
Objective value = -0.236721
nSV = 399
..........................*.*
optimization finished, #iter = 278
Objective value = -0.247073
nSV = 441
.................................................*.....*.*
optimization finished, #iter = 553
Objective value = -0.230373
nSV = 366
..............................*.*
optimization finished, #iter = 315
Objective value = -0.274564
nSV = 458

*** EPOCH = 1, VIDEO = 306 *** 
*** EPOCH = 1, VIDEO = 307 *** 
*** EPOCH = 1, VIDEO = 308 *** 
*** EPOCH = 1, VIDEO = 309 *** 
*** EPOCH = 1, VIDEO = 310 *** 
*** EPOCH = 1, VIDEO = 311 *** 
*** EPOCH = 1, VIDEO = 312 *** 
*** EPOCH = 1, VIDEO = 313 *** 
*** EPOCH = 1, VIDEO = 314 *** 
*** EPOCH = 1, VIDEO = 315 *** 
*** EPOCH = 1, VIDEO = 316 *** 
*** EPOCH = 1, VIDEO = 317 *** 
*** EPOCH = 1, VIDEO = 318 *** 
*** EPOCH = 1, VIDEO = 319 *** 
*** EPOCH = 1, VIDEO = 320 *** 
*** EPOCH = 1, VIDEO = 321 *** 
*** EPOCH = 1, VIDEO = 322 *** 
*** EPOCH = 1, VIDEO = 323 *** 
*** EPOCH = 1, VIDEO = 324 *** 
*** EPOCH = 1, VIDEO = 325 *** 
*** EPOCH = 1, VIDEO = 326 *** 
*** EPOCH = 1, VIDEO = 327 *** 
*** EPOCH = 1, VIDEO = 328 *** 
*** EPOCH = 1, VIDEO = 329 *** 
*** EPOCH = 1, VIDEO = 330 *** 
*** EPOCH = 1, VIDEO = 331 *** 
*** EPOCH = 1, VIDEO = 332 *** 
*** EPOCH = 1, VIDEO = 333 *** 
*** EPOCH = 1, VIDEO = 334 *** 
*** EPOCH = 1, VIDEO = 335 *** 
*** EPOCH = 1, VIDEO = 336 *** 
*** EPOCH = 1, VIDEO = 337 *** 
*** EPOCH = 1, VIDEO = 338 *** 
*** EPOCH = 1, VIDEO = 339 *** 
*** EPOCH = 1, VIDEO = 340 *** 
*** EPOCH = 1, VIDEO = 341 *** 
*** EPOCH = 1, VIDEO = 342 *** 
*** EPOCH = 1, VIDEO = 343 *** 
*** EPOCH = 1, VIDEO = 344 *** 
*** EPOCH = 1, VIDEO = 345 *** 
*** EPOCH = 1, VIDEO = 346 *** 
*** EPOCH = 1, VIDEO = 347 *** 
*** EPOCH = 1, VIDEO = 348 *** 
*** EPOCH = 1, VIDEO = 349 *** 
*** EPOCH = 1, VIDEO = 350 *** 
*** EPOCH = 1, VIDEO = 351 *** 
*** EPOCH = 1, VIDEO = 352 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 620 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
       7: meanAcc=0.966 -- pos wrong:     1/   35; neg wrong:    22/  560;       obj val: 0.272 = 0.000  (posUnscaled) + 0.125 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    18/  587;       obj val: 0.290 = 0.000  (posUnscaled) + 0.126 (neg) + 0.165 (reg)
       9: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    19/  620;       obj val: 0.305 = 0.000  (posUnscaled) + 0.127 (neg) + 0.178 (reg)
    Pruning easy negatives
         before pruning: #neg = 620
         after pruning: #neg = 442
    Cache holds 35 pos examples and 442 neg examples
    18 pos support vectors
    317 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 672 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
       7: meanAcc=0.952 -- pos wrong:     1/   30; neg wrong:    37/  588;       obj val: 0.298 = 0.000  (posUnscaled) + 0.151 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    38/  629;       obj val: 0.323 = 0.000  (posUnscaled) + 0.159 (neg) + 0.164 (reg)
       9: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    40/  672;       obj val: 0.340 = 0.000  (posUnscaled) + 0.164 (neg) + 0.177 (reg)
    Pruning easy negatives
         before pruning: #neg = 672
         after pruning: #neg = 496
    Cache holds 30 pos examples and 496 neg examples
    17 pos support vectors
    403 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 576 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
       7: meanAcc=0.938 -- pos wrong:     0/   34; neg wrong:    62/  502;       obj val: 0.276 = 0.000  (posUnscaled) + 0.183 (neg) + 0.094 (reg)
       8: meanAcc=0.947 -- pos wrong:     0/   34; neg wrong:    58/  545;       obj val: 0.291 = 0.000  (posUnscaled) + 0.187 (neg) + 0.104 (reg)
       9: meanAcc=0.948 -- pos wrong:     0/   34; neg wrong:    60/  576;       obj val: 0.297 = 0.000  (posUnscaled) + 0.187 (neg) + 0.110 (reg)
    Pruning easy negatives
         before pruning: #neg = 576
         after pruning: #neg = 393
    Cache holds 34 pos examples and 393 neg examples
    18 pos support vectors
    307 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 713 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
       7: meanAcc=0.968 -- pos wrong:     0/   28; neg wrong:    41/  634;       obj val: 0.310 = 0.000  (posUnscaled) + 0.172 (neg) + 0.138 (reg)
       8: meanAcc=0.974 -- pos wrong:     0/   28; neg wrong:    36/  680;       obj val: 0.332 = 0.000  (posUnscaled) + 0.183 (neg) + 0.149 (reg)...........**.
optimization finished, #iter = 120
Objective value = -0.316841
nSV = 503
...........*
optimization finished, #iter = 111
Objective value = -0.323122
nSV = 524
....................................................................................................
optimization finished, #iter = 1000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -0.166371
nSV = 317
........**.
optimization finished, #iter = 90
Objective value = -0.303253
nSV = 479
............................*
optimization finished, #iter = 282
Objective value = -0.179416
nSV = 321

       9: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  713;       obj val: 0.361 = 0.000  (posUnscaled) + 0.207 (neg) + 0.154 (reg)
    Pruning easy negatives
         before pruning: #neg = 713
         after pruning: #neg = 526
    Cache holds 28 pos examples and 526 neg examples
    15 pos support vectors
    404 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 720 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
       7: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:   100/  640;       obj val: 0.436 = 0.000  (posUnscaled) + 0.254 (neg) + 0.182 (reg)
       8: meanAcc=0.927 -- pos wrong:     0/   27; neg wrong:   100/  685;       obj val: 0.455 = 0.000  (posUnscaled) + 0.264 (neg) + 0.190 (reg)
       9: meanAcc=0.935 -- pos wrong:     0/   27; neg wrong:    94/  720;       obj val: 0.466 = 0.000  (posUnscaled) + 0.269 (neg) + 0.197 (reg)
    Pruning easy negatives
         before pruning: #neg = 720
         after pruning: #neg = 541
    Cache holds 27 pos examples and 541 neg examples
    11 pos support vectors
    471 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 731 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
       7: meanAcc=0.929 -- pos wrong:     0/   28; neg wrong:    91/  642;       obj val: 0.461 = 0.000  (posUnscaled) + 0.241 (neg) + 0.219 (reg)
       8: meanAcc=0.931 -- pos wrong:     0/   28; neg wrong:    94/  685;       obj val: 0.471 = 0.000  (posUnscaled) + 0.246 (neg) + 0.225 (reg)
       9: meanAcc=0.936 -- pos wrong:     0/   28; neg wrong:    94/  731;       obj val: 0.479 = 0.000  (posUnscaled) + 0.248 (neg) + 0.231 (reg)
    Pruning easy negatives
         before pruning: #neg = 731
         after pruning: #neg = 560
    Cache holds 28 pos examples and 560 neg examples
    14 pos support vectors
    489 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 568 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
       7: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  524;       obj val: 0.250 = 0.000  (posUnscaled) + 0.086 (neg) + 0.163 (reg)
       8: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  541;       obj val: 0.257 = 0.000  (posUnscaled) + 0.088 (neg) + 0.169 (reg)
       9: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  568;       obj val: 0.264 = 0.000  (posUnscaled) + 0.086 (neg) + 0.178 (reg)
    Pruning easy negatives
         before pruning: #neg = 568
         after pruning: #neg = 384
    Cache holds 39 pos examples and 384 neg examples
    22 pos support vectors
    246 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 688 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
       7: meanAcc=0.951 -- pos wrong:     0/   29; neg wrong:    59/  602;       obj val: 0.327 = 0.000  (posUnscaled) + 0.195 (neg) + 0.132 (reg)
       8: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    71/  647;       obj val: 0.364 = 0.000  (posUnscaled) + 0.223 (neg) + 0.141 (reg)
       9: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    75/  688;       obj val: 0.380 = 0.000  (posUnscaled) + 0.232 (neg) + 0.148 (reg)
    Pruning easy negatives
         before pruning: #neg = 688
         after pruning: #neg = 510
    Cache holds 29 pos examples and 510 neg examples
    26 pos support vectors
    409 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 552 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)...............**
optimization finished, #iter = 153
Objective value = -0.233981
nSV = 397
.......................*.**
optimization finished, #iter = 243
Objective value = -0.189419
nSV = 323
........*
optimization finished, #iter = 83
Objective value = -0.281153
nSV = 459

       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg)
       7: meanAcc=0.990 -- pos wrong:     0/   38; neg wrong:    10/  515;       obj val: 0.215 = 0.000  (posUnscaled) + 0.085 (neg) + 0.131 (reg)
       8: meanAcc=0.989 -- pos wrong:     0/   38; neg wrong:    12/  540;       obj val: 0.230 = 0.000  (posUnscaled) + 0.087 (neg) + 0.144 (reg)
       9: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     8/  552;       obj val: 0.236 = 0.000  (posUnscaled) + 0.087 (neg) + 0.149 (reg)
    Pruning easy negatives
         before pruning: #neg = 552
         after pruning: #neg = 364
    Cache holds 38 pos examples and 364 neg examples
    24 pos support vectors
    263 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 621 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
       7: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    36/  547;       obj val: 0.267 = 0.000  (posUnscaled) + 0.145 (neg) + 0.122 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    39/  588;       obj val: 0.289 = 0.000  (posUnscaled) + 0.158 (neg) + 0.131 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    41/  621;       obj val: 0.301 = 0.000  (posUnscaled) + 0.164 (neg) + 0.137 (reg)
    Pruning easy negatives
         before pruning: #neg = 621
         after pruning: #neg = 442
    Cache holds 27 pos examples and 442 neg examples
    22 pos support vectors
    330 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 530 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
       7: meanAcc=0.964 -- pos wrong:     0/   39; neg wrong:    35/  483;       obj val: 0.223 = 0.000  (posUnscaled) + 0.113 (neg) + 0.110 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    33/  507;       obj val: 0.243 = 0.000  (posUnscaled) + 0.116 (neg) + 0.127 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    35/  530;       obj val: 0.249 = 0.000  (posUnscaled) + 0.114 (neg) + 0.135 (reg)
    Pruning easy negatives
         before pruning: #neg = 530
         after pruning: #neg = 340
    Cache holds 39 pos examples and 340 neg examples
    23 pos support vectors
    286 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 676 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
       7: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    69/  599;       obj val: 0.320 = 0.000  (posUnscaled) + 0.193 (neg) + 0.127 (reg)
       8: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    83/  638;       obj val: 0.349 = 0.000  (posUnscaled) + 0.212 (neg) + 0.137 (reg)
       9: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    91/  676;       obj val: 0.373 = 0.000  (posUnscaled) + 0.228 (neg) + 0.145 (reg)
    Pruning easy negatives
         before pruning: #neg = 676
         after pruning: #neg = 490
    Cache holds 29 pos examples and 490 neg examples
    22 pos support vectors
    397 neg support vectors
*** EPOCH = 1, VIDEO = 353 *** 
*** EPOCH = 1, VIDEO = 354 *** 
*** EPOCH = 1, VIDEO = 355 *** 
*** EPOCH = 1, VIDEO = 356 *** 
*** EPOCH = 1, VIDEO = 357 *** 
*** EPOCH = 1, VIDEO = 358 *** 
*** EPOCH = 1, VIDEO = 359 *** 
*** EPOCH = 1, VIDEO = 360 *** 
*** EPOCH = 1, VIDEO = 361 *** 
*** EPOCH = 1, VIDEO = 362 *** 
*** EPOCH = 1, VIDEO = 363 *** 
*** EPOCH = 1, VIDEO = 364 *** 
*** EPOCH = 1, VIDEO = 365 *** 
*** EPOCH = 1, VIDEO = 366 *** 
*** EPOCH = 1, VIDEO = 367 *** 
*** EPOCH = 1, VIDEO = 368 *** 
*** EPOCH = 1, VIDEO = 369 *** 
*** EPOCH = 1, VIDEO = 370 *** 
*** EPOCH = 1, VIDEO = 371 *** 
*** EPOCH = 1, VIDEO = 372 *** 
*** EPOCH = 1, VIDEO = 373 *** 
*** EPOCH = 1, VIDEO = 374 *** 
*** EPOCH = 1, VIDEO = 375 *** 
*** EPOCH = 1, VIDEO = 376 *** 
*** EPOCH = 1, VIDEO = 377 *** 
*** EPOCH = 1, VIDEO = 378 *** 
*** EPOCH = 1, VIDEO = 379 *** 
*** EPOCH = 1, VIDEO = 380 *** 
*** EPOCH = 1, VIDEO = 381 *** 
*** EPOCH = 1, VIDEO = 382 *** 
*** EPOCH = 1, VIDEO = 383 *** 
*** EPOCH = 1, VIDEO = 384 *** 
*** EPOCH = 1, VIDEO = 385 *** 
*** EPOCH = 1, VIDEO = 386 *** 
*** EPOCH = 1, VIDEO = 387 *** 
*** EPOCH = 1, VIDEO = 388 *** 
*** EPOCH = 1, VIDEO = 389 *** 
*** EPOCH = 1, VIDEO = 390 *** 
*** EPOCH = 1, VIDEO = 391 *** 
*** EPOCH = 1, VIDEO = 392 *** 
*** EPOCH = 1, VIDEO = 393 *** 
*** EPOCH = 1, VIDEO = 394 *** 
*** EPOCH = 1, VIDEO = 395 *** 
*** EPOCH = 1, VIDEO = 396 *** 
*** EPOCH = 1, VIDEO = 397 *** 
*** EPOCH = 1, VIDEO = 398 *** 
*** EPOCH = 1, VIDEO = 399 *** 
*** EPOCH = 1, VIDEO = 400 *** 
*** EPOCH = 1, VIDEO = 401 *** 
*** EPOCH = 1, VIDEO = 402 *** 
*** EPOCH = 1, VIDEO = 403 *** 
*** EPOCH = 1, VIDEO = 404 *** 
*** EPOCH = 1, VIDEO = 405 *** 
*** EPOCH = 1, VIDEO = 406 *** 
*** EPOCH = 1, VIDEO = 407 *** 
*** EPOCH = 1, VIDEO = 408 *** 
*** EPOCH = 1, VIDEO = 409 *** 
*** EPOCH = 1, VIDEO = 410 *** 
*** EPOCH = 1, VIDEO = 411 *** 
*** EPOCH = 1, VIDEO = 412 *** 
*** EPOCH = 1, VIDEO = 413 *** 
*** EPOCH = 1, VIDEO = 414 *** .......................................*.*
optimization finished, #iter = 403
Objective value = -0.251933
nSV = 427
..........................*
optimization finished, #iter = 263
Objective value = -0.255454
nSV = 460
......................................................*
optimization finished, #iter = 541
Objective value = -0.241505
nSV = 382
.................................*
optimization finished, #iter = 335
Objective value = -0.286682
nSV = 484

*** EPOCH = 1, VIDEO = 415 *** 
*** EPOCH = 1, VIDEO = 416 *** 
*** EPOCH = 1, VIDEO = 417 *** 
*** EPOCH = 1, VIDEO = 418 *** 
*** EPOCH = 1, VIDEO = 419 *** 
*** EPOCH = 1, VIDEO = 420 *** 
*** EPOCH = 1, VIDEO = 421 *** 
*** EPOCH = 1, VIDEO = 422 *** 
*** EPOCH = 1, VIDEO = 423 *** 
*** EPOCH = 1, VIDEO = 424 *** 
*** EPOCH = 1, VIDEO = 425 *** 
*** EPOCH = 1, VIDEO = 426 *** 
*** EPOCH = 1, VIDEO = 427 *** 
*** EPOCH = 1, VIDEO = 428 *** 
*** EPOCH = 1, VIDEO = 429 *** 
*** EPOCH = 1, VIDEO = 430 *** 
*** EPOCH = 1, VIDEO = 431 *** 
*** EPOCH = 1, VIDEO = 432 *** 
*** EPOCH = 1, VIDEO = 433 *** 
*** EPOCH = 1, VIDEO = 434 *** 
*** EPOCH = 1, VIDEO = 435 *** 
*** EPOCH = 1, VIDEO = 436 *** 
*** EPOCH = 1, VIDEO = 437 *** 
*** EPOCH = 1, VIDEO = 438 *** 
*** EPOCH = 1, VIDEO = 439 *** 
*** EPOCH = 1, VIDEO = 440 *** 
*** EPOCH = 1, VIDEO = 441 *** 
*** EPOCH = 1, VIDEO = 442 *** 
*** EPOCH = 1, VIDEO = 443 *** 
*** EPOCH = 1, VIDEO = 444 *** 
*** EPOCH = 1, VIDEO = 445 *** 
*** EPOCH = 1, VIDEO = 446 *** 
*** EPOCH = 1, VIDEO = 447 *** 
*** EPOCH = 1, VIDEO = 448 *** 
*** EPOCH = 1, VIDEO = 449 *** 
*** EPOCH = 1, VIDEO = 450 *** 
*** EPOCH = 1, VIDEO = 451 *** 
*** EPOCH = 1, VIDEO = 452 *** 
*** EPOCH = 1, VIDEO = 453 *** 
*** EPOCH = 1, VIDEO = 454 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 644 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
       7: meanAcc=0.966 -- pos wrong:     1/   35; neg wrong:    22/  560;       obj val: 0.272 = 0.000  (posUnscaled) + 0.125 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    18/  587;       obj val: 0.290 = 0.000  (posUnscaled) + 0.126 (neg) + 0.165 (reg)
       9: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    19/  620;       obj val: 0.305 = 0.000  (posUnscaled) + 0.127 (neg) + 0.178 (reg)
      10: meanAcc=0.971 -- pos wrong:     1/   35; neg wrong:    19/  644;       obj val: 0.333 = 0.000  (posUnscaled) + 0.145 (neg) + 0.189 (reg)
    Pruning easy negatives
         before pruning: #neg = 644
         after pruning: #neg = 493
    Cache holds 35 pos examples and 493 neg examples
    22 pos support vectors
    360 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 698 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
       7: meanAcc=0.952 -- pos wrong:     1/   30; neg wrong:    37/  588;       obj val: 0.298 = 0.000  (posUnscaled) + 0.151 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    38/  629;       obj val: 0.323 = 0.000  (posUnscaled) + 0.159 (neg) + 0.164 (reg)
       9: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    40/  672;       obj val: 0.340 = 0.000  (posUnscaled) + 0.164 (neg) + 0.177 (reg)
      10: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    40/  698;       obj val: 0.358 = 0.000  (posUnscaled) + 0.171 (neg) + 0.187 (reg)
    Pruning easy negatives
         before pruning: #neg = 698
         after pruning: #neg = 526
    Cache holds 30 pos examples and 526 neg examples
    13 pos support vectors
    415 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 595 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
       7: meanAcc=0.938 -- pos wrong:     0/   34; neg wrong:    62/  502;       obj val: 0.276 = 0.000  (posUnscaled) + 0.183 (neg) + 0.094 (reg)
       8: meanAcc=0.947 -- pos wrong:     0/   34; neg wrong:    58/  545;       obj val: 0.291 = 0.000  (posUnscaled) + 0.187 (neg) + 0.104 (reg)
       9: meanAcc=0.948 -- pos wrong:     0/   34; neg wrong:    60/  576;       obj val: 0.297 = 0.000  (posUnscaled) + 0.187 (neg) + 0.110 (reg)
      10: meanAcc=0.950 -- pos wrong:     0/   34; neg wrong:    59/  595;       obj val: 0.312 = 0.000  (posUnscaled) + 0.193 (neg) + 0.119 (reg)
    Pruning easy negatives
         before pruning: #neg = 595
         after pruning: #neg = 418
    Cache holds 34 pos examples and 418 neg examples
    15 pos support vectors
    338 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 728 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
       7: meanAcc=0.968 -- pos wrong:     0/   28; neg wrong:    41/  634;       obj val: 0.310 = 0.000  (posUnscaled) + 0.172 (neg) + 0.138 (reg)...........*
optimization finished, #iter = 115
Objective value = -0.342107
nSV = 537
..........*
optimization finished, #iter = 107
Objective value = -0.339663
nSV = 556
..................................................................................................**..
optimization finished, #iter = 1000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -0.169794
nSV = 329
..........*.*
optimization finished, #iter = 118
Objective value = -0.317283
nSV = 513

       8: meanAcc=0.974 -- pos wrong:     0/   28; neg wrong:    36/  680;       obj val: 0.332 = 0.000  (posUnscaled) + 0.183 (neg) + 0.149 (reg)
       9: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  713;       obj val: 0.361 = 0.000  (posUnscaled) + 0.207 (neg) + 0.154 (reg)
      10: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  728;       obj val: 0.375 = 0.000  (posUnscaled) + 0.211 (neg) + 0.164 (reg)
    Pruning easy negatives
         before pruning: #neg = 728
         after pruning: #neg = 558
    Cache holds 28 pos examples and 558 neg examples
    17 pos support vectors
    423 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 743 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
       7: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:   100/  640;       obj val: 0.436 = 0.000  (posUnscaled) + 0.254 (neg) + 0.182 (reg)
       8: meanAcc=0.927 -- pos wrong:     0/   27; neg wrong:   100/  685;       obj val: 0.455 = 0.000  (posUnscaled) + 0.264 (neg) + 0.190 (reg)
       9: meanAcc=0.935 -- pos wrong:     0/   27; neg wrong:    94/  720;       obj val: 0.466 = 0.000  (posUnscaled) + 0.269 (neg) + 0.197 (reg)
      10: meanAcc=0.921 -- pos wrong:     0/   27; neg wrong:   118/  743;       obj val: 0.489 = 0.000  (posUnscaled) + 0.295 (neg) + 0.194 (reg)
    Pruning easy negatives
         before pruning: #neg = 743
         after pruning: #neg = 569
    Cache holds 27 pos examples and 569 neg examples
    16 pos support vectors
    486 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 762 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
       7: meanAcc=0.929 -- pos wrong:     0/   28; neg wrong:    91/  642;       obj val: 0.461 = 0.000  (posUnscaled) + 0.241 (neg) + 0.219 (reg)
       8: meanAcc=0.931 -- pos wrong:     0/   28; neg wrong:    94/  685;       obj val: 0.471 = 0.000  (posUnscaled) + 0.246 (neg) + 0.225 (reg)
       9: meanAcc=0.936 -- pos wrong:     0/   28; neg wrong:    94/  731;       obj val: 0.479 = 0.000  (posUnscaled) + 0.248 (neg) + 0.231 (reg)
      10: meanAcc=0.940 -- pos wrong:     0/   28; neg wrong:    92/  762;       obj val: 0.491 = 0.000  (posUnscaled) + 0.255 (neg) + 0.236 (reg)
    Pruning easy negatives
         before pruning: #neg = 762
         after pruning: #neg = 608
    Cache holds 28 pos examples and 608 neg examples
    10 pos support vectors
    529 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 586 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
       7: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  524;       obj val: 0.250 = 0.000  (posUnscaled) + 0.086 (neg) + 0.163 (reg)
       8: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  541;       obj val: 0.257 = 0.000  (posUnscaled) + 0.088 (neg) + 0.169 (reg)
       9: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  568;       obj val: 0.264 = 0.000  (posUnscaled) + 0.086 (neg) + 0.178 (reg)
      10: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  586;       obj val: 0.271 = 0.000  (posUnscaled) + 0.086 (neg) + 0.185 (reg)
    Pruning easy negatives
         before pruning: #neg = 586
         after pruning: #neg = 404
    Cache holds 39 pos examples and 404 neg examples
    15 pos support vectors
    274 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 712 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
       7: meanAcc=0.951 -- pos wrong:     0/   29; neg wrong:    59/  602;       obj val: 0.327 = 0.000  (posUnscaled) + 0.195 (neg) + 0.132 (reg)
       8: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    71/  647;       obj val: 0.364 = 0.000  (posUnscaled) + 0.223 (neg) + 0.141 (reg)
       9: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    75/  688;       obj val: 0.380 = 0.000  (posUnscaled) + 0.232 (neg) + 0.148 (reg)
      10: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    83/  712;       obj val: 0.394 = 0.000  (posUnscaled) + 0.240 (neg) + 0.154 (reg)
    Pruning easy negatives
         before pruning: #neg = 712
         after pruning: #neg = 541
    Cache holds 29 pos examples and 541 neg examples...........................*
optimization finished, #iter = 274
Objective value = -0.184501
nSV = 348
............*
optimization finished, #iter = 126
Objective value = -0.243450
nSV = 424
.........................*.*
optimization finished, #iter = 261
Objective value = -0.196434
nSV = 341
........*
optimization finished, #iter = 82
Objective value = -0.293849
nSV = 473

    19 pos support vectors
    463 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 566 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg)
       7: meanAcc=0.990 -- pos wrong:     0/   38; neg wrong:    10/  515;       obj val: 0.215 = 0.000  (posUnscaled) + 0.085 (neg) + 0.131 (reg)
       8: meanAcc=0.989 -- pos wrong:     0/   38; neg wrong:    12/  540;       obj val: 0.230 = 0.000  (posUnscaled) + 0.087 (neg) + 0.144 (reg)
       9: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     8/  552;       obj val: 0.236 = 0.000  (posUnscaled) + 0.087 (neg) + 0.149 (reg)
      10: meanAcc=0.992 -- pos wrong:     0/   38; neg wrong:     9/  566;       obj val: 0.245 = 0.000  (posUnscaled) + 0.084 (neg) + 0.162 (reg)
    Pruning easy negatives
         before pruning: #neg = 566
         after pruning: #neg = 383
    Cache holds 38 pos examples and 383 neg examples
    17 pos support vectors
    309 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 644 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
       7: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    36/  547;       obj val: 0.267 = 0.000  (posUnscaled) + 0.145 (neg) + 0.122 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    39/  588;       obj val: 0.289 = 0.000  (posUnscaled) + 0.158 (neg) + 0.131 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    41/  621;       obj val: 0.301 = 0.000  (posUnscaled) + 0.164 (neg) + 0.137 (reg)
      10: meanAcc=0.966 -- pos wrong:     0/   27; neg wrong:    44/  644;       obj val: 0.310 = 0.000  (posUnscaled) + 0.167 (neg) + 0.143 (reg)
    Pruning easy negatives
         before pruning: #neg = 644
         after pruning: #neg = 464
    Cache holds 27 pos examples and 464 neg examples
    6 pos support vectors
    396 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 542 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
       7: meanAcc=0.964 -- pos wrong:     0/   39; neg wrong:    35/  483;       obj val: 0.223 = 0.000  (posUnscaled) + 0.113 (neg) + 0.110 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    33/  507;       obj val: 0.243 = 0.000  (posUnscaled) + 0.116 (neg) + 0.127 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    35/  530;       obj val: 0.249 = 0.000  (posUnscaled) + 0.114 (neg) + 0.135 (reg)
      10: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    33/  542;       obj val: 0.262 = 0.000  (posUnscaled) + 0.110 (neg) + 0.152 (reg)
    Pruning easy negatives
         before pruning: #neg = 542
         after pruning: #neg = 356
    Cache holds 39 pos examples and 356 neg examples
    14 pos support vectors
    311 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 692 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
       7: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    69/  599;       obj val: 0.320 = 0.000  (posUnscaled) + 0.193 (neg) + 0.127 (reg)
       8: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    83/  638;       obj val: 0.349 = 0.000  (posUnscaled) + 0.212 (neg) + 0.137 (reg)
       9: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    91/  676;       obj val: 0.373 = 0.000  (posUnscaled) + 0.228 (neg) + 0.145 (reg)
      10: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    90/  692;       obj val: 0.386 = 0.000  (posUnscaled) + 0.234 (neg) + 0.151 (reg)
    Pruning easy negatives
         before pruning: #neg = 692
         after pruning: #neg = 505
    Cache holds 29 pos examples and 505 neg examples
    22 pos support vectors
    410 neg support vectors
*** EPOCH = 1, VIDEO = 455 *** 
*** EPOCH = 1, VIDEO = 456 *** 
*** EPOCH = 1, VIDEO = 457 *** 
*** EPOCH = 1, VIDEO = 458 *** 
*** EPOCH = 1, VIDEO = 459 *** 
*** EPOCH = 1, VIDEO = 460 *** 
*** EPOCH = 1, VIDEO = 461 *** 
*** EPOCH = 1, VIDEO = 462 *** 
*** EPOCH = 1, VIDEO = 463 *** 
*** EPOCH = 1, VIDEO = 464 *** 
*** EPOCH = 1, VIDEO = 465 *** 
*** EPOCH = 1, VIDEO = 466 *** 
*** EPOCH = 1, VIDEO = 467 *** 
*** EPOCH = 1, VIDEO = 468 *** 
*** EPOCH = 1, VIDEO = 469 *** 
*** EPOCH = 1, VIDEO = 470 *** ..................................................................**.
optimization finished, #iter = 670
Objective value = -0.262841
nSV = 446
............................*
optimization finished, #iter = 282
Objective value = -0.264780
nSV = 477
..................................................*
optimization finished, #iter = 508
Objective value = -0.252269
nSV = 406

*** EPOCH = 1, VIDEO = 471 *** 
*** EPOCH = 1, VIDEO = 472 *** 
*** EPOCH = 1, VIDEO = 473 *** 
*** EPOCH = 1, VIDEO = 474 *** 
*** EPOCH = 1, VIDEO = 475 *** 
*** EPOCH = 1, VIDEO = 476 *** 
*** EPOCH = 1, VIDEO = 477 *** 
*** EPOCH = 1, VIDEO = 478 *** 
*** EPOCH = 1, VIDEO = 479 *** 
*** EPOCH = 1, VIDEO = 480 *** 
*** EPOCH = 1, VIDEO = 481 *** 
*** EPOCH = 1, VIDEO = 482 *** 
*** EPOCH = 1, VIDEO = 483 *** 
*** EPOCH = 1, VIDEO = 484 *** 
*** EPOCH = 1, VIDEO = 485 *** 
*** EPOCH = 1, VIDEO = 486 *** 
*** EPOCH = 1, VIDEO = 487 *** 
*** EPOCH = 1, VIDEO = 488 *** 
*** EPOCH = 1, VIDEO = 489 *** 
*** EPOCH = 1, VIDEO = 490 *** 
*** EPOCH = 1, VIDEO = 491 *** 
*** EPOCH = 1, VIDEO = 492 *** 
*** EPOCH = 1, VIDEO = 493 *** 
*** EPOCH = 1, VIDEO = 494 *** 
*** EPOCH = 1, VIDEO = 495 *** 
*** EPOCH = 1, VIDEO = 496 *** 
*** EPOCH = 1, VIDEO = 497 *** 
*** EPOCH = 1, VIDEO = 498 *** 
*** EPOCH = 1, VIDEO = 499 *** 
*** EPOCH = 1, VIDEO = 500 *** 
*** EPOCH = 1, VIDEO = 501 *** 
*** EPOCH = 1, VIDEO = 502 *** 
*** EPOCH = 1, VIDEO = 503 *** 
*** EPOCH = 1, VIDEO = 504 *** 
*** EPOCH = 1, VIDEO = 505 *** 
*** EPOCH = 1, VIDEO = 506 *** 
*** EPOCH = 1, VIDEO = 507 *** 
*** EPOCH = 1, VIDEO = 508 *** 
*** EPOCH = 1, VIDEO = 509 *** 
*** EPOCH = 1, VIDEO = 510 *** 
*** EPOCH = 1, VIDEO = 511 *** 
*** EPOCH = 1, VIDEO = 512 *** 
*** EPOCH = 1, VIDEO = 513 *** 
*** EPOCH = 1, VIDEO = 514 *** 
*** EPOCH = 1, VIDEO = 515 *** 
*** EPOCH = 1, VIDEO = 516 *** 
*** EPOCH = 1, VIDEO = 517 *** 
*** EPOCH = 1, VIDEO = 518 *** 
*** EPOCH = 1, VIDEO = 519 *** 
*** EPOCH = 1, VIDEO = 520 *** 
*** EPOCH = 1, VIDEO = 521 *** 
*** EPOCH = 1, VIDEO = 522 *** 
*** EPOCH = 1, VIDEO = 523 *** 
*** EPOCH = 1, VIDEO = 524 *** 
*** EPOCH = 1, VIDEO = 525 *** 
*** EPOCH = 1, VIDEO = 526 *** 
*** EPOCH = 1, VIDEO = 527 *** 
*** EPOCH = 1, VIDEO = 528 *** 
*** EPOCH = 1, VIDEO = 529 *** 
*** EPOCH = 1, VIDEO = 530 *** 
*** EPOCH = 1, VIDEO = 531 *** 
*** EPOCH = 1, VIDEO = 532 *** 
*** EPOCH = 1, VIDEO = 533 *** 
*** EPOCH = 1, VIDEO = 534 *** 
*** EPOCH = 1, VIDEO = 535 *** 
*** EPOCH = 1, VIDEO = 536 *** 
*** EPOCH = 1, VIDEO = 537 *** 
*** EPOCH = 1, VIDEO = 538 *** 
*** EPOCH = 1, VIDEO = 539 *** 
*** EPOCH = 1, VIDEO = 540 *** 
*** EPOCH = 1, VIDEO = 541 *** 
*** EPOCH = 1, VIDEO = 542 *** 
*** EPOCH = 1, VIDEO = 543 *** 
*** EPOCH = 1, VIDEO = 544 *** 
*** EPOCH = 1, VIDEO = 545 *** 
*** EPOCH = 1, VIDEO = 546 *** 
*** EPOCH = 1, VIDEO = 547 *** 
*** EPOCH = 1, VIDEO = 548 *** 
*** EPOCH = 1, VIDEO = 549 *** 
*** EPOCH = 1, VIDEO = 550 *** 
*** EPOCH = 1, VIDEO = 551 *** 
*** EPOCH = 1, VIDEO = 552 *** 
*** EPOCH = 1, VIDEO = 553 *** 
*** EPOCH = 1, VIDEO = 554 *** 
*** EPOCH = 1, VIDEO = 555 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 695 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
       7: meanAcc=0.966 -- pos wrong:     1/   35; neg wrong:    22/  560;       obj val: 0.272 = 0.000  (posUnscaled) + 0.125 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    18/  587;       obj val: 0.290 = 0.000  (posUnscaled) + 0.126 (neg) + 0.165 (reg)
       9: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    19/  620;       obj val: 0.305 = 0.000  (posUnscaled) + 0.127 (neg) + 0.178 (reg)
      10: meanAcc=0.971 -- pos wrong:     1/   35; neg wrong:    19/  644;       obj val: 0.333 = 0.000  (posUnscaled) + 0.145 (neg) + 0.189 (reg)
      11: meanAcc=0.973 -- pos wrong:     1/   35; neg wrong:    18/  695;       obj val: 0.346 = 0.000  (posUnscaled) + 0.147 (neg) + 0.199 (reg)
    Pruning easy negatives
         before pruning: #neg = 695
         after pruning: #neg = 517
    Cache holds 35 pos examples and 517 neg examples
    12 pos support vectors
    418 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 728 neg examples
[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
       7: meanAcc=0.952 -- pos wrong:     1/   30; neg wrong:    37/  588;       obj val: 0.298 = 0.000  (posUnscaled) + 0.151 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    38/  629;       obj val: 0.323 = 0.000  (posUnscaled) + 0.159 (neg) + 0.164 (reg)
       9: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    40/  672;       obj val: 0.340 = 0.000  (posUnscaled) + 0.164 (neg) + 0.177 (reg)
      10: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    40/  698;       obj val: 0.358 = 0.000  (posUnscaled) + 0.171 (neg) + 0.187 (reg)
      11: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    44/  728;       obj val: 0.367 = 0.000  (posUnscaled) + 0.178 (neg) + 0.190 (reg)
    Pruning easy negatives
         before pruning: #neg = 728
         after pruning: #neg = 563
    Cache holds 30 pos examples and 563 neg examples
    16 pos support vectors
    405 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 620 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
       7: meanAcc=0.938 -- pos wrong:     0/   34; neg wrong:    62/  502;       obj val: 0.276 = 0.000  (posUnscaled) + 0.183 (neg) + 0.094 (reg)
       8: meanAcc=0.947 -- pos wrong:     0/   34; neg wrong:    58/  545;       obj val: 0.291 = 0.000  (posUnscaled) + 0.187 (neg) + 0.104 (reg)..................**.
optimization finished, #iter = 190
Objective value = -0.296593
nSV = 503
...........*.
optimization finished, #iter = 120
Objective value = -0.358695
nSV = 573
..........*
optimization finished, #iter = 109
Objective value = -0.354079
nSV = 579
.....................................................................................*..*
optimization finished, #iter = 874
Objective value = -0.188198
nSV = 356

       9: meanAcc=0.948 -- pos wrong:     0/   34; neg wrong:    60/  576;       obj val: 0.297 = 0.000  (posUnscaled) + 0.187 (neg) + 0.110 (reg)
      10: meanAcc=0.950 -- pos wrong:     0/   34; neg wrong:    59/  595;       obj val: 0.312 = 0.000  (posUnscaled) + 0.193 (neg) + 0.119 (reg)
      11: meanAcc=0.949 -- pos wrong:     0/   34; neg wrong:    63/  620;       obj val: 0.322 = 0.000  (posUnscaled) + 0.200 (neg) + 0.122 (reg)
    Pruning easy negatives
         before pruning: #neg = 620
         after pruning: #neg = 444
    Cache holds 34 pos examples and 444 neg examples
    24 pos support vectors
    324 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 760 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
       7: meanAcc=0.968 -- pos wrong:     0/   28; neg wrong:    41/  634;       obj val: 0.310 = 0.000  (posUnscaled) + 0.172 (neg) + 0.138 (reg)
       8: meanAcc=0.974 -- pos wrong:     0/   28; neg wrong:    36/  680;       obj val: 0.332 = 0.000  (posUnscaled) + 0.183 (neg) + 0.149 (reg)
       9: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  713;       obj val: 0.361 = 0.000  (posUnscaled) + 0.207 (neg) + 0.154 (reg)
      10: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  728;       obj val: 0.375 = 0.000  (posUnscaled) + 0.211 (neg) + 0.164 (reg)
      11: meanAcc=0.967 -- pos wrong:     0/   28; neg wrong:    50/  760;       obj val: 0.382 = 0.000  (posUnscaled) + 0.210 (neg) + 0.173 (reg)
    Pruning easy negatives
         before pruning: #neg = 760
         after pruning: #neg = 557
    Cache holds 28 pos examples and 557 neg examples
    20 pos support vectors
    429 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 771 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
       7: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:   100/  640;       obj val: 0.436 = 0.000  (posUnscaled) + 0.254 (neg) + 0.182 (reg)
       8: meanAcc=0.927 -- pos wrong:     0/   27; neg wrong:   100/  685;       obj val: 0.455 = 0.000  (posUnscaled) + 0.264 (neg) + 0.190 (reg)
       9: meanAcc=0.935 -- pos wrong:     0/   27; neg wrong:    94/  720;       obj val: 0.466 = 0.000  (posUnscaled) + 0.269 (neg) + 0.197 (reg)
      10: meanAcc=0.921 -- pos wrong:     0/   27; neg wrong:   118/  743;       obj val: 0.489 = 0.000  (posUnscaled) + 0.295 (neg) + 0.194 (reg)
      11: meanAcc=0.918 -- pos wrong:     0/   27; neg wrong:   126/  771;       obj val: 0.507 = 0.000  (posUnscaled) + 0.305 (neg) + 0.202 (reg)
    Pruning easy negatives
         before pruning: #neg = 771
         after pruning: #neg = 614
    Cache holds 27 pos examples and 614 neg examples
    14 pos support vectors
    542 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 810 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
       7: meanAcc=0.929 -- pos wrong:     0/   28; neg wrong:    91/  642;       obj val: 0.461 = 0.000  (posUnscaled) + 0.241 (neg) + 0.219 (reg)
       8: meanAcc=0.931 -- pos wrong:     0/   28; neg wrong:    94/  685;       obj val: 0.471 = 0.000  (posUnscaled) + 0.246 (neg) + 0.225 (reg)
       9: meanAcc=0.936 -- pos wrong:     0/   28; neg wrong:    94/  731;       obj val: 0.479 = 0.000  (posUnscaled) + 0.248 (neg) + 0.231 (reg)
      10: meanAcc=0.940 -- pos wrong:     0/   28; neg wrong:    92/  762;       obj val: 0.491 = 0.000  (posUnscaled) + 0.255 (neg) + 0.236 (reg)
      11: meanAcc=0.949 -- pos wrong:     0/   28; neg wrong:    83/  810;       obj val: 0.509 = 0.000  (posUnscaled) + 0.257 (neg) + 0.252 (reg)
    Pruning easy negatives
         before pruning: #neg = 810
         after pruning: #neg = 634
    Cache holds 28 pos examples and 634 neg examples
    15 pos support vectors
    541 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 606 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
       7: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  524;       obj val: 0.250 = 0.000  (posUnscaled) + 0.086 (neg) + 0.163 (reg)
       8: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  541;       obj val: 0.257 = 0.000  (posUnscaled) + 0.088 (neg) + 0.169 (reg)...........*
optimization finished, #iter = 118
Objective value = -0.326720
nSV = 527
...................................*.**
optimization finished, #iter = 367
Objective value = -0.191957
nSV = 359
..........*
optimization finished, #iter = 101
Objective value = -0.247953
nSV = 438
........................***.*
optimization finished, #iter = 252
Objective value = -0.199888
nSV = 353

       9: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  568;       obj val: 0.264 = 0.000  (posUnscaled) + 0.086 (neg) + 0.178 (reg)
      10: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  586;       obj val: 0.271 = 0.000  (posUnscaled) + 0.086 (neg) + 0.185 (reg)
      11: meanAcc=0.978 -- pos wrong:     0/   39; neg wrong:    27/  606;       obj val: 0.296 = 0.000  (posUnscaled) + 0.108 (neg) + 0.189 (reg)
    Pruning easy negatives
         before pruning: #neg = 606
         after pruning: #neg = 406
    Cache holds 39 pos examples and 406 neg examples
    21 pos support vectors
    274 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 743 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
       7: meanAcc=0.951 -- pos wrong:     0/   29; neg wrong:    59/  602;       obj val: 0.327 = 0.000  (posUnscaled) + 0.195 (neg) + 0.132 (reg)
       8: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    71/  647;       obj val: 0.364 = 0.000  (posUnscaled) + 0.223 (neg) + 0.141 (reg)
       9: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    75/  688;       obj val: 0.380 = 0.000  (posUnscaled) + 0.232 (neg) + 0.148 (reg)
      10: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    83/  712;       obj val: 0.394 = 0.000  (posUnscaled) + 0.240 (neg) + 0.154 (reg)
      11: meanAcc=0.952 -- pos wrong:     0/   29; neg wrong:    72/  743;       obj val: 0.401 = 0.000  (posUnscaled) + 0.238 (neg) + 0.163 (reg)
    Pruning easy negatives
         before pruning: #neg = 743
         after pruning: #neg = 586
    Cache holds 29 pos examples and 586 neg examples
    21 pos support vectors
    459 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 585 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg)
       7: meanAcc=0.990 -- pos wrong:     0/   38; neg wrong:    10/  515;       obj val: 0.215 = 0.000  (posUnscaled) + 0.085 (neg) + 0.131 (reg)
       8: meanAcc=0.989 -- pos wrong:     0/   38; neg wrong:    12/  540;       obj val: 0.230 = 0.000  (posUnscaled) + 0.087 (neg) + 0.144 (reg)
       9: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     8/  552;       obj val: 0.236 = 0.000  (posUnscaled) + 0.087 (neg) + 0.149 (reg)
      10: meanAcc=0.992 -- pos wrong:     0/   38; neg wrong:     9/  566;       obj val: 0.245 = 0.000  (posUnscaled) + 0.084 (neg) + 0.162 (reg)
      11: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     8/  585;       obj val: 0.254 = 0.000  (posUnscaled) + 0.087 (neg) + 0.167 (reg)
    Pruning easy negatives
         before pruning: #neg = 585
         after pruning: #neg = 416
    Cache holds 38 pos examples and 416 neg examples
    14 pos support vectors
    295 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 666 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
       7: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    36/  547;       obj val: 0.267 = 0.000  (posUnscaled) + 0.145 (neg) + 0.122 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    39/  588;       obj val: 0.289 = 0.000  (posUnscaled) + 0.158 (neg) + 0.131 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    41/  621;       obj val: 0.301 = 0.000  (posUnscaled) + 0.164 (neg) + 0.137 (reg)
      10: meanAcc=0.966 -- pos wrong:     0/   27; neg wrong:    44/  644;       obj val: 0.310 = 0.000  (posUnscaled) + 0.167 (neg) + 0.143 (reg)
      11: meanAcc=0.970 -- pos wrong:     0/   27; neg wrong:    40/  666;       obj val: 0.314 = 0.000  (posUnscaled) + 0.166 (neg) + 0.148 (reg)
    Pruning easy negatives
         before pruning: #neg = 666
         after pruning: #neg = 486
    Cache holds 27 pos examples and 486 neg examples
    18 pos support vectors
    364 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 558 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
       7: meanAcc=0.964 -- pos wrong:     0/   39; neg wrong:    35/  483;       obj val: 0.223 = 0.000  (posUnscaled) + 0.113 (neg) + 0.110 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    33/  507;       obj val: 0.243 = 0.000  (posUnscaled) + 0.116 (neg) + 0.127 (reg).......*.
optimization finished, #iter = 80
Objective value = -0.302469
nSV = 493
................................................................*.*.**
optimization finished, #iter = 665
Objective value = -0.268688
nSV = 452

       9: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    35/  530;       obj val: 0.249 = 0.000  (posUnscaled) + 0.114 (neg) + 0.135 (reg)
      10: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    33/  542;       obj val: 0.262 = 0.000  (posUnscaled) + 0.110 (neg) + 0.152 (reg)
      11: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    34/  558;       obj val: 0.263 = 0.000  (posUnscaled) + 0.108 (neg) + 0.154 (reg)
    Pruning easy negatives
         before pruning: #neg = 558
         after pruning: #neg = 371
    Cache holds 39 pos examples and 371 neg examples
    18 pos support vectors
    310 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 707 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
       7: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    69/  599;       obj val: 0.320 = 0.000  (posUnscaled) + 0.193 (neg) + 0.127 (reg)
       8: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    83/  638;       obj val: 0.349 = 0.000  (posUnscaled) + 0.212 (neg) + 0.137 (reg)
       9: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    91/  676;       obj val: 0.373 = 0.000  (posUnscaled) + 0.228 (neg) + 0.145 (reg)
      10: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    90/  692;       obj val: 0.386 = 0.000  (posUnscaled) + 0.234 (neg) + 0.151 (reg)
      11: meanAcc=0.939 -- pos wrong:     0/   29; neg wrong:    86/  707;       obj val: 0.391 = 0.000  (posUnscaled) + 0.233 (neg) + 0.158 (reg)
    Pruning easy negatives
         before pruning: #neg = 707
         after pruning: #neg = 532
    Cache holds 29 pos examples and 532 neg examples
    17 pos support vectors
    427 neg support vectors
*** EPOCH = 1, VIDEO = 556 *** 
*** EPOCH = 1, VIDEO = 557 *** 
*** EPOCH = 1, VIDEO = 558 *** 
*** EPOCH = 1, VIDEO = 559 *** 
*** EPOCH = 1, VIDEO = 560 *** 
*** EPOCH = 1, VIDEO = 561 *** 
*** EPOCH = 1, VIDEO = 562 *** 
*** EPOCH = 1, VIDEO = 563 *** 
*** EPOCH = 1, VIDEO = 564 *** 
*** EPOCH = 1, VIDEO = 565 *** 
*** EPOCH = 1, VIDEO = 566 *** 
*** EPOCH = 1, VIDEO = 567 *** 
*** EPOCH = 1, VIDEO = 568 *** 
*** EPOCH = 1, VIDEO = 569 *** 
*** EPOCH = 1, VIDEO = 570 *** 
*** EPOCH = 1, VIDEO = 571 *** 
*** EPOCH = 1, VIDEO = 572 *** 
*** EPOCH = 1, VIDEO = 573 *** 
*** EPOCH = 1, VIDEO = 574 *** 
*** EPOCH = 1, VIDEO = 575 *** 
*** EPOCH = 1, VIDEO = 576 *** 
*** EPOCH = 1, VIDEO = 577 *** 
*** EPOCH = 1, VIDEO = 578 *** 
*** EPOCH = 1, VIDEO = 579 *** 
*** EPOCH = 1, VIDEO = 580 *** 
*** EPOCH = 1, VIDEO = 581 *** 
*** EPOCH = 1, VIDEO = 582 *** 
*** EPOCH = 1, VIDEO = 583 *** 
*** EPOCH = 1, VIDEO = 584 *** 
*** EPOCH = 1, VIDEO = 585 *** 
*** EPOCH = 1, VIDEO = 586 *** 
*** EPOCH = 1, VIDEO = 587 *** 
*** EPOCH = 1, VIDEO = 588 *** 
*** EPOCH = 1, VIDEO = 589 *** 
*** EPOCH = 1, VIDEO = 590 *** 
*** EPOCH = 1, VIDEO = 591 *** 
*** EPOCH = 1, VIDEO = 592 *** 
*** EPOCH = 1, VIDEO = 593 *** 
*** EPOCH = 1, VIDEO = 594 *** 
*** EPOCH = 1, VIDEO = 595 *** 
*** EPOCH = 1, VIDEO = 596 *** 
*** EPOCH = 1, VIDEO = 597 *** 
*** EPOCH = 1, VIDEO = 598 *** 
*** EPOCH = 1, VIDEO = 599 *** 
*** EPOCH = 1, VIDEO = 600 *** 
*** EPOCH = 1, VIDEO = 601 *** 
*** EPOCH = 1, VIDEO = 602 *** 
*** EPOCH = 1, VIDEO = 603 *** 
*** EPOCH = 1, VIDEO = 604 *** 
*** EPOCH = 1, VIDEO = 605 *** 
*** EPOCH = 1, VIDEO = 606 *** 
*** EPOCH = 1, VIDEO = 607 *** 
*** EPOCH = 1, VIDEO = 608 *** 
*** EPOCH = 1, VIDEO = 609 *** 
*** EPOCH = 1, VIDEO = 610 *** 
*** EPOCH = 1, VIDEO = 611 *** 
*** EPOCH = 1, VIDEO = 612 *** 
*** EPOCH = 1, VIDEO = 613 *** 
*** EPOCH = 1, VIDEO = 614 *** 
*** EPOCH = 1, VIDEO = 615 *** 
*** EPOCH = 1, VIDEO = 616 *** 
*** EPOCH = 1, VIDEO = 617 *** 
*** EPOCH = 1, VIDEO = 618 *** 
*** EPOCH = 1, VIDEO = 619 *** 
*** EPOCH = 1, VIDEO = 620 *** 
*** EPOCH = 1, VIDEO = 621 *** 
*** EPOCH = 1, VIDEO = 622 *** 
*** EPOCH = 1, VIDEO = 623 *** 
*** EPOCH = 1, VIDEO = 624 *** 
*** EPOCH = 1, VIDEO = 625 *** 
*** EPOCH = 1, VIDEO = 626 *** 
*** EPOCH = 1, VIDEO = 627 *** 
*** EPOCH = 1, VIDEO = 628 *** 
*** EPOCH = 1, VIDEO = 629 *** 
*** EPOCH = 1, VIDEO = 630 *** 
*** EPOCH = 1, VIDEO = 631 *** 
*** EPOCH = 1, VIDEO = 632 *** 
*** EPOCH = 1, VIDEO = 633 *** 
*** EPOCH = 1, VIDEO = 634 *** 
*** EPOCH = 1, VIDEO = 635 *** 
*** EPOCH = 1, VIDEO = 636 *** 
*** EPOCH = 1, VIDEO = 637 *** 
*** EPOCH = 1, VIDEO = 638 *** 
*** EPOCH = 1, VIDEO = 639 *** 
*** EPOCH = 1, VIDEO = 640 *** 
*** EPOCH = 1, VIDEO = 641 *** 
*** EPOCH = 1, VIDEO = 642 *** 
*** EPOCH = 1, VIDEO = 643 *** 
*** EPOCH = 1, VIDEO = 644 *** 
*** EPOCH = 1, VIDEO = 645 *** 
*** EPOCH = 1, VIDEO = 646 *** 
*** EPOCH = 1, VIDEO = 647 *** 
*** EPOCH = 1, VIDEO = 648 *** 
*** EPOCH = 1, VIDEO = 649 *** 
*** EPOCH = 1, VIDEO = 650 *** 
*** EPOCH = 1, VIDEO = 651 *** 
*** EPOCH = 1, VIDEO = 652 *** 
*** EPOCH = 1, VIDEO = 653 *** 
*** EPOCH = 1, VIDEO = 654 *** 
*** EPOCH = 1, VIDEO = 655 *** 
*** EPOCH = 1, VIDEO = 656 *** 
>>> Updating 11 detector <<<
Cache holds 35 pos examples and 719 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   35; neg wrong:     5/  202;       obj val: 0.084 = 0.000  (posUnscaled) + 0.037 (neg) + 0.047 (reg)
       1: meanAcc=0.952 -- pos wrong:     1/   35; neg wrong:    21/  314;       obj val: 0.129 = 0.000  (posUnscaled) + 0.070 (neg) + 0.059 (reg)
       2: meanAcc=0.963 -- pos wrong:     1/   35; neg wrong:    18/  391;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.083 (reg)
       3: meanAcc=0.968 -- pos wrong:     0/   35; neg wrong:    28/  439;       obj val: 0.194 = 0.000  (posUnscaled) + 0.106 (neg) + 0.088 (reg)
       4: meanAcc=0.951 -- pos wrong:     1/   35; neg wrong:    32/  466;       obj val: 0.238 = 0.000  (posUnscaled) + 0.124 (neg) + 0.113 (reg)
       5: meanAcc=0.956 -- pos wrong:     1/   35; neg wrong:    30/  511;       obj val: 0.252 = 0.000  (posUnscaled) + 0.128 (neg) + 0.124 (reg)
       6: meanAcc=0.962 -- pos wrong:     1/   35; neg wrong:    25/  534;       obj val: 0.262 = 0.000  (posUnscaled) + 0.124 (neg) + 0.138 (reg)
       7: meanAcc=0.966 -- pos wrong:     1/   35; neg wrong:    22/  560;       obj val: 0.272 = 0.000  (posUnscaled) + 0.125 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    18/  587;       obj val: 0.290 = 0.000  (posUnscaled) + 0.126 (neg) + 0.165 (reg)
       9: meanAcc=0.970 -- pos wrong:     1/   35; neg wrong:    19/  620;       obj val: 0.305 = 0.000  (posUnscaled) + 0.127 (neg) + 0.178 (reg)
      10: meanAcc=0.971 -- pos wrong:     1/   35; neg wrong:    19/  644;       obj val: 0.333 = 0.000  (posUnscaled) + 0.145 (neg) + 0.189 (reg)
      11: meanAcc=0.973 -- pos wrong:     1/   35; neg wrong:    18/  695;       obj val: 0.346 = 0.000  (posUnscaled) + 0.147 (neg) + 0.199 (reg)
      12: meanAcc=0.973 -- pos wrong:     1/   35; neg wrong:    18/  719;       obj val: 0.360 = 0.000  (posUnscaled) + 0.144 (neg) + 0.216 (reg)
    Pruning easy negatives
         before pruning: #neg = 719
         after pruning: #neg = 528
    Cache holds 35 pos examples and 528 neg examples
    22 pos support vectors
    390 neg support vectors
>>> Updating 12 detector <<<
Cache holds 30 pos examples and 765 neg examples............................*
optimization finished, #iter = 288
Objective value = -0.271168
nSV = 490
...........................................*.**
optimization finished, #iter = 448
Objective value = -0.258229
nSV = 418
...............................*.*
optimization finished, #iter = 322
Objective value = -0.302291
nSV = 511
............*
optimization finished, #iter = 122
Objective value = -0.370541
nSV = 601

[LibLinear]       0: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    12/  202;       obj val: 0.106 = 0.000  (posUnscaled) + 0.053 (neg) + 0.053 (reg)
       1: meanAcc=0.960 -- pos wrong:     0/   30; neg wrong:    26/  324;       obj val: 0.151 = 0.000  (posUnscaled) + 0.088 (neg) + 0.063 (reg)
       2: meanAcc=0.963 -- pos wrong:     0/   30; neg wrong:    30/  408;       obj val: 0.200 = 0.000  (posUnscaled) + 0.117 (neg) + 0.083 (reg)
       3: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    27/  462;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.092 (reg)
       4: meanAcc=0.947 -- pos wrong:     1/   30; neg wrong:    35/  477;       obj val: 0.247 = 0.000  (posUnscaled) + 0.126 (neg) + 0.121 (reg)
       5: meanAcc=0.951 -- pos wrong:     1/   30; neg wrong:    34/  531;       obj val: 0.265 = 0.000  (posUnscaled) + 0.133 (neg) + 0.132 (reg)
       6: meanAcc=0.950 -- pos wrong:     1/   30; neg wrong:    37/  562;       obj val: 0.286 = 0.000  (posUnscaled) + 0.145 (neg) + 0.140 (reg)
       7: meanAcc=0.952 -- pos wrong:     1/   30; neg wrong:    37/  588;       obj val: 0.298 = 0.000  (posUnscaled) + 0.151 (neg) + 0.147 (reg)
       8: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    38/  629;       obj val: 0.323 = 0.000  (posUnscaled) + 0.159 (neg) + 0.164 (reg)
       9: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    40/  672;       obj val: 0.340 = 0.000  (posUnscaled) + 0.164 (neg) + 0.177 (reg)
      10: meanAcc=0.971 -- pos wrong:     0/   30; neg wrong:    40/  698;       obj val: 0.358 = 0.000  (posUnscaled) + 0.171 (neg) + 0.187 (reg)
      11: meanAcc=0.970 -- pos wrong:     0/   30; neg wrong:    44/  728;       obj val: 0.367 = 0.000  (posUnscaled) + 0.178 (neg) + 0.190 (reg)
      12: meanAcc=0.976 -- pos wrong:     0/   30; neg wrong:    36/  765;       obj val: 0.379 = 0.000  (posUnscaled) + 0.176 (neg) + 0.202 (reg)
    Pruning easy negatives
         before pruning: #neg = 765
         after pruning: #neg = 587
    Cache holds 30 pos examples and 587 neg examples
    10 pos support vectors
    428 neg support vectors
>>> Updating 13 detector <<<
Cache holds 34 pos examples and 646 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   34; neg wrong:     5/  202;       obj val: 0.073 = 0.000  (posUnscaled) + 0.026 (neg) + 0.047 (reg)
       1: meanAcc=0.936 -- pos wrong:     0/   34; neg wrong:    39/  303;       obj val: 0.153 = 0.000  (posUnscaled) + 0.103 (neg) + 0.051 (reg)
       2: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    36/  372;       obj val: 0.169 = 0.000  (posUnscaled) + 0.112 (neg) + 0.057 (reg)
       3: meanAcc=0.957 -- pos wrong:     0/   34; neg wrong:    35/  408;       obj val: 0.175 = 0.000  (posUnscaled) + 0.114 (neg) + 0.061 (reg)
       4: meanAcc=0.944 -- pos wrong:     0/   34; neg wrong:    47/  423;       obj val: 0.214 = 0.000  (posUnscaled) + 0.140 (neg) + 0.074 (reg)
       5: meanAcc=0.952 -- pos wrong:     0/   34; neg wrong:    44/  461;       obj val: 0.223 = 0.000  (posUnscaled) + 0.141 (neg) + 0.082 (reg)
       6: meanAcc=0.956 -- pos wrong:     0/   34; neg wrong:    42/  477;       obj val: 0.231 = 0.000  (posUnscaled) + 0.141 (neg) + 0.090 (reg)
       7: meanAcc=0.938 -- pos wrong:     0/   34; neg wrong:    62/  502;       obj val: 0.276 = 0.000  (posUnscaled) + 0.183 (neg) + 0.094 (reg)
       8: meanAcc=0.947 -- pos wrong:     0/   34; neg wrong:    58/  545;       obj val: 0.291 = 0.000  (posUnscaled) + 0.187 (neg) + 0.104 (reg)
       9: meanAcc=0.948 -- pos wrong:     0/   34; neg wrong:    60/  576;       obj val: 0.297 = 0.000  (posUnscaled) + 0.187 (neg) + 0.110 (reg)
      10: meanAcc=0.950 -- pos wrong:     0/   34; neg wrong:    59/  595;       obj val: 0.312 = 0.000  (posUnscaled) + 0.193 (neg) + 0.119 (reg)
      11: meanAcc=0.949 -- pos wrong:     0/   34; neg wrong:    63/  620;       obj val: 0.322 = 0.000  (posUnscaled) + 0.200 (neg) + 0.122 (reg)
      12: meanAcc=0.950 -- pos wrong:     0/   34; neg wrong:    64/  646;       obj val: 0.328 = 0.000  (posUnscaled) + 0.199 (neg) + 0.129 (reg)
    Pruning easy negatives
         before pruning: #neg = 646
         after pruning: #neg = 461
    Cache holds 34 pos examples and 461 neg examples
    20 pos support vectors
    362 neg support vectors
>>> Updating 14 detector <<<
Cache holds 28 pos examples and 759 neg examples
[LibLinear]       0: meanAcc=0.983 -- pos wrong:     0/   28; neg wrong:     7/  202;       obj val: 0.128 = 0.000  (posUnscaled) + 0.046 (neg) + 0.082 (reg)
       1: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    23/  335;       obj val: 0.175 = 0.000  (posUnscaled) + 0.092 (neg) + 0.082 (reg)
       2: meanAcc=0.947 -- pos wrong:     0/   28; neg wrong:    45/  421;       obj val: 0.228 = 0.000  (posUnscaled) + 0.133 (neg) + 0.095 (reg)
       3: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    42/  478;       obj val: 0.238 = 0.000  (posUnscaled) + 0.134 (neg) + 0.104 (reg)
       4: meanAcc=0.952 -- pos wrong:     0/   28; neg wrong:    49/  508;       obj val: 0.267 = 0.000  (posUnscaled) + 0.155 (neg) + 0.112 (reg)
       5: meanAcc=0.956 -- pos wrong:     0/   28; neg wrong:    50/  566;       obj val: 0.288 = 0.000  (posUnscaled) + 0.165 (neg) + 0.123 (reg)
       6: meanAcc=0.965 -- pos wrong:     0/   28; neg wrong:    42/  596;       obj val: 0.299 = 0.000  (posUnscaled) + 0.169 (neg) + 0.130 (reg)
       7: meanAcc=0.968 -- pos wrong:     0/   28; neg wrong:    41/  634;       obj val: 0.310 = 0.000  (posUnscaled) + 0.172 (neg) + 0.138 (reg)
       8: meanAcc=0.974 -- pos wrong:     0/   28; neg wrong:    36/  680;       obj val: 0.332 = 0.000  (posUnscaled) + 0.183 (neg) + 0.149 (reg)
       9: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  713;       obj val: 0.361 = 0.000  (posUnscaled) + 0.207 (neg) + 0.154 (reg)
      10: meanAcc=0.966 -- pos wrong:     0/   28; neg wrong:    49/  728;       obj val: 0.375 = 0.000  (posUnscaled) + 0.211 (neg) + 0.164 (reg)
      11: meanAcc=0.967 -- pos wrong:     0/   28; neg wrong:    50/  760;       obj val: 0.382 = 0.000  (posUnscaled) + 0.210 (neg) + 0.173 (reg)
      12: meanAcc=0.974 -- pos wrong:     0/   28; neg wrong:    40/  759;       obj val: 0.384 = 0.000  (posUnscaled) + 0.204 (neg) + 0.180 (reg)
    Pruning easy negatives
         before pruning: #neg = 759
         after pruning: #neg = 561
    Cache holds 28 pos examples and 561 neg examples
    11 pos support vectors
    467 neg support vectors
>>> Updating 15 detector <<<
Cache holds 27 pos examples and 816 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.045 (neg) + 0.141 (reg)
       1: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    52/  334;       obj val: 0.271 = 0.000  (posUnscaled) + 0.130 (neg) + 0.141 (reg)
       2: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:    60/  433;       obj val: 0.304 = 0.000  (posUnscaled) + 0.155 (neg) + 0.149 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   27; neg wrong:    55/  482;       obj val: 0.314 = 0.000  (posUnscaled) + 0.155 (neg) + 0.159 (reg)
       4: meanAcc=0.917 -- pos wrong:     0/   27; neg wrong:    84/  507;       obj val: 0.382 = 0.000  (posUnscaled) + 0.226 (neg) + 0.156 (reg)
       5: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:    90/  576;       obj val: 0.405 = 0.000  (posUnscaled) + 0.233 (neg) + 0.172 (reg)
       6: meanAcc=0.925 -- pos wrong:     0/   27; neg wrong:    91/  610;       obj val: 0.421 = 0.000  (posUnscaled) + 0.244 (neg) + 0.177 (reg)
       7: meanAcc=0.922 -- pos wrong:     0/   27; neg wrong:   100/  640;       obj val: 0.436 = 0.000  (posUnscaled) + 0.254 (neg) + 0.182 (reg)
       8: meanAcc=0.927 -- pos wrong:     0/   27; neg wrong:   100/  685;       obj val: 0.455 = 0.000  (posUnscaled) + 0.264 (neg) + 0.190 (reg)
       9: meanAcc=0.935 -- pos wrong:     0/   27; neg wrong:    94/  720;       obj val: 0.466 = 0.000  (posUnscaled) + 0.269 (neg) + 0.197 (reg)
      10: meanAcc=0.921 -- pos wrong:     0/   27; neg wrong:   118/  743;       obj val: 0.489 = 0.000  (posUnscaled) + 0.295 (neg) + 0.194 (reg)................*
optimization finished, #iter = 162
Objective value = -0.375991
nSV = 616
....................................................................................................
optimization finished, #iter = 1000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -0.192483
nSV = 359
...........*.
optimization finished, #iter = 120
Objective value = -0.337295
nSV = 540
.................................**.**
optimization finished, #iter = 344
Objective value = -0.194361
nSV = 368

      11: meanAcc=0.918 -- pos wrong:     0/   27; neg wrong:   126/  771;       obj val: 0.507 = 0.000  (posUnscaled) + 0.305 (neg) + 0.202 (reg)
      12: meanAcc=0.931 -- pos wrong:     0/   27; neg wrong:   112/  816;       obj val: 0.519 = 0.000  (posUnscaled) + 0.310 (neg) + 0.209 (reg)
    Pruning easy negatives
         before pruning: #neg = 816
         after pruning: #neg = 648
    Cache holds 27 pos examples and 648 neg examples
    21 pos support vectors
    506 neg support vectors
>>> Updating 16 detector <<<
Cache holds 28 pos examples and 836 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   28; neg wrong:    10/  202;       obj val: 0.185 = 0.000  (posUnscaled) + 0.046 (neg) + 0.139 (reg)
       1: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    51/  331;       obj val: 0.282 = 0.000  (posUnscaled) + 0.130 (neg) + 0.152 (reg)
       2: meanAcc=0.932 -- pos wrong:     0/   28; neg wrong:    59/  433;       obj val: 0.315 = 0.000  (posUnscaled) + 0.153 (neg) + 0.162 (reg)
       3: meanAcc=0.941 -- pos wrong:     0/   28; neg wrong:    58/  489;       obj val: 0.333 = 0.000  (posUnscaled) + 0.156 (neg) + 0.177 (reg)
       4: meanAcc=0.925 -- pos wrong:     0/   28; neg wrong:    76/  508;       obj val: 0.370 = 0.000  (posUnscaled) + 0.195 (neg) + 0.175 (reg)
       5: meanAcc=0.928 -- pos wrong:     0/   28; neg wrong:    84/  583;       obj val: 0.404 = 0.000  (posUnscaled) + 0.215 (neg) + 0.189 (reg)
       6: meanAcc=0.923 -- pos wrong:     0/   28; neg wrong:    95/  619;       obj val: 0.446 = 0.000  (posUnscaled) + 0.238 (neg) + 0.208 (reg)
       7: meanAcc=0.929 -- pos wrong:     0/   28; neg wrong:    91/  642;       obj val: 0.461 = 0.000  (posUnscaled) + 0.241 (neg) + 0.219 (reg)
       8: meanAcc=0.931 -- pos wrong:     0/   28; neg wrong:    94/  685;       obj val: 0.471 = 0.000  (posUnscaled) + 0.246 (neg) + 0.225 (reg)
       9: meanAcc=0.936 -- pos wrong:     0/   28; neg wrong:    94/  731;       obj val: 0.479 = 0.000  (posUnscaled) + 0.248 (neg) + 0.231 (reg)
      10: meanAcc=0.940 -- pos wrong:     0/   28; neg wrong:    92/  762;       obj val: 0.491 = 0.000  (posUnscaled) + 0.255 (neg) + 0.236 (reg)
      11: meanAcc=0.949 -- pos wrong:     0/   28; neg wrong:    83/  810;       obj val: 0.509 = 0.000  (posUnscaled) + 0.257 (neg) + 0.252 (reg)
      12: meanAcc=0.938 -- pos wrong:     0/   28; neg wrong:   104/  836;       obj val: 0.544 = 0.000  (posUnscaled) + 0.288 (neg) + 0.256 (reg)
    Pruning easy negatives
         before pruning: #neg = 836
         after pruning: #neg = 674
    Cache holds 28 pos examples and 674 neg examples
    25 pos support vectors
    516 neg support vectors
>>> Updating 17 detector <<<
Cache holds 39 pos examples and 608 neg examples
[LibLinear]       0: meanAcc=1.000 -- pos wrong:     0/   39; neg wrong:     0/  202;       obj val: 0.072 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     1/  319;       obj val: 0.119 = 0.000  (posUnscaled) + 0.039 (neg) + 0.079 (reg)
       2: meanAcc=0.997 -- pos wrong:     0/   39; neg wrong:     2/  393;       obj val: 0.157 = 0.000  (posUnscaled) + 0.051 (neg) + 0.106 (reg)
       3: meanAcc=0.998 -- pos wrong:     0/   39; neg wrong:     2/  422;       obj val: 0.162 = 0.000  (posUnscaled) + 0.052 (neg) + 0.110 (reg)
       4: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     6/  434;       obj val: 0.201 = 0.000  (posUnscaled) + 0.061 (neg) + 0.140 (reg)
       5: meanAcc=0.982 -- pos wrong:     0/   39; neg wrong:    17/  474;       obj val: 0.237 = 0.000  (posUnscaled) + 0.090 (neg) + 0.147 (reg)
       6: meanAcc=0.983 -- pos wrong:     0/   39; neg wrong:    17/  498;       obj val: 0.247 = 0.000  (posUnscaled) + 0.089 (neg) + 0.158 (reg)
       7: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  524;       obj val: 0.250 = 0.000  (posUnscaled) + 0.086 (neg) + 0.163 (reg)
       8: meanAcc=0.986 -- pos wrong:     0/   39; neg wrong:    15/  541;       obj val: 0.257 = 0.000  (posUnscaled) + 0.088 (neg) + 0.169 (reg)
       9: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  568;       obj val: 0.264 = 0.000  (posUnscaled) + 0.086 (neg) + 0.178 (reg)
      10: meanAcc=0.987 -- pos wrong:     0/   39; neg wrong:    15/  586;       obj val: 0.271 = 0.000  (posUnscaled) + 0.086 (neg) + 0.185 (reg)
      11: meanAcc=0.978 -- pos wrong:     0/   39; neg wrong:    27/  606;       obj val: 0.296 = 0.000  (posUnscaled) + 0.108 (neg) + 0.189 (reg)
      12: meanAcc=0.975 -- pos wrong:     0/   39; neg wrong:    30/  608;       obj val: 0.303 = 0.000  (posUnscaled) + 0.113 (neg) + 0.190 (reg)
    Pruning easy negatives
         before pruning: #neg = 608
         after pruning: #neg = 430
    Cache holds 39 pos examples and 430 neg examples
    27 pos support vectors
    272 neg support vectors
>>> Updating 18 detector <<<
Cache holds 29 pos examples and 788 neg examples
[LibLinear]       0: meanAcc=0.988 -- pos wrong:     0/   29; neg wrong:     5/  202;       obj val: 0.137 = 0.000  (posUnscaled) + 0.044 (neg) + 0.093 (reg)
       1: meanAcc=0.948 -- pos wrong:     0/   29; neg wrong:    34/  327;       obj val: 0.199 = 0.000  (posUnscaled) + 0.111 (neg) + 0.088 (reg)
       2: meanAcc=0.941 -- pos wrong:     0/   29; neg wrong:    48/  408;       obj val: 0.242 = 0.000  (posUnscaled) + 0.146 (neg) + 0.096 (reg)
       3: meanAcc=0.947 -- pos wrong:     0/   29; neg wrong:    50/  471;       obj val: 0.260 = 0.000  (posUnscaled) + 0.154 (neg) + 0.106 (reg)
       4: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    65/  483;       obj val: 0.277 = 0.000  (posUnscaled) + 0.176 (neg) + 0.101 (reg)
       5: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    61/  539;       obj val: 0.303 = 0.000  (posUnscaled) + 0.188 (neg) + 0.115 (reg)
       6: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    63/  570;       obj val: 0.314 = 0.000  (posUnscaled) + 0.190 (neg) + 0.123 (reg)
       7: meanAcc=0.951 -- pos wrong:     0/   29; neg wrong:    59/  602;       obj val: 0.327 = 0.000  (posUnscaled) + 0.195 (neg) + 0.132 (reg)
       8: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    71/  647;       obj val: 0.364 = 0.000  (posUnscaled) + 0.223 (neg) + 0.141 (reg)
       9: meanAcc=0.945 -- pos wrong:     0/   29; neg wrong:    75/  688;       obj val: 0.380 = 0.000  (posUnscaled) + 0.232 (neg) + 0.148 (reg)
      10: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    83/  712;       obj val: 0.394 = 0.000  (posUnscaled) + 0.240 (neg) + 0.154 (reg)
      11: meanAcc=0.952 -- pos wrong:     0/   29; neg wrong:    72/  743;       obj val: 0.401 = 0.000  (posUnscaled) + 0.238 (neg) + 0.163 (reg)
      12: meanAcc=0.953 -- pos wrong:     0/   29; neg wrong:    74/  788;       obj val: 0.418 = 0.000  (posUnscaled) + 0.245 (neg) + 0.173 (reg)
    Pruning easy negatives
         before pruning: #neg = 788
         after pruning: #neg = 616
    Cache holds 29 pos examples and 616 neg examples
    28 pos support vectors
    468 neg support vectors
>>> Updating 19 detector <<<
Cache holds 38 pos examples and 618 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     3/  202;       obj val: 0.071 = 0.000  (posUnscaled) + 0.025 (neg) + 0.047 (reg)
       1: meanAcc=0.975 -- pos wrong:     0/   38; neg wrong:    15/  306;       obj val: 0.126 = 0.000  (posUnscaled) + 0.065 (neg) + 0.061 (reg)
       2: meanAcc=0.971 -- pos wrong:     0/   38; neg wrong:    22/  384;       obj val: 0.155 = 0.000  (posUnscaled) + 0.081 (neg) + 0.075 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   38; neg wrong:    20/  415;       obj val: 0.159 = 0.000  (posUnscaled) + 0.080 (neg) + 0.080 (reg)
       4: meanAcc=0.984 -- pos wrong:     0/   38; neg wrong:    14/  437;       obj val: 0.192 = 0.000  (posUnscaled) + 0.087 (neg) + 0.104 (reg)
       5: meanAcc=0.983 -- pos wrong:     0/   38; neg wrong:    16/  469;       obj val: 0.203 = 0.000  (posUnscaled) + 0.091 (neg) + 0.112 (reg)
       6: meanAcc=0.986 -- pos wrong:     0/   38; neg wrong:    14/  493;       obj val: 0.210 = 0.000  (posUnscaled) + 0.088 (neg) + 0.122 (reg).......................*.
optimization finished, #iter = 240
Objective value = -0.254027
nSV = 450
...............*
optimization finished, #iter = 156
Objective value = -0.212685
nSV = 377
........*
optimization finished, #iter = 88
Objective value = -0.310874
nSV = 519
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/classes.py:220: DeprecationWarning: loss='l1' has been deprecated in favor of loss='hinge' as of 0.16. Backward compatibility for the loss='l1' will be removed in 1.0
  DeprecationWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/base.py:929: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/base.py:929: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/base.py:929: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/base.py:929: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/sklearn/svm/base.py:929: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)

       7: meanAcc=0.990 -- pos wrong:     0/   38; neg wrong:    10/  515;       obj val: 0.215 = 0.000  (posUnscaled) + 0.085 (neg) + 0.131 (reg)
       8: meanAcc=0.989 -- pos wrong:     0/   38; neg wrong:    12/  540;       obj val: 0.230 = 0.000  (posUnscaled) + 0.087 (neg) + 0.144 (reg)
       9: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     8/  552;       obj val: 0.236 = 0.000  (posUnscaled) + 0.087 (neg) + 0.149 (reg)
      10: meanAcc=0.992 -- pos wrong:     0/   38; neg wrong:     9/  566;       obj val: 0.245 = 0.000  (posUnscaled) + 0.084 (neg) + 0.162 (reg)
      11: meanAcc=0.993 -- pos wrong:     0/   38; neg wrong:     8/  585;       obj val: 0.254 = 0.000  (posUnscaled) + 0.087 (neg) + 0.167 (reg)
      12: meanAcc=0.992 -- pos wrong:     0/   38; neg wrong:    10/  618;       obj val: 0.262 = 0.000  (posUnscaled) + 0.088 (neg) + 0.175 (reg)
    Pruning easy negatives
         before pruning: #neg = 618
         after pruning: #neg = 435
    Cache holds 38 pos examples and 435 neg examples
    23 pos support vectors
    285 neg support vectors
>>> Updating 20 detector <<<
Cache holds 27 pos examples and 688 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   27; neg wrong:    10/  202;       obj val: 0.136 = 0.000  (posUnscaled) + 0.049 (neg) + 0.087 (reg)
       1: meanAcc=0.959 -- pos wrong:     0/   27; neg wrong:    26/  320;       obj val: 0.166 = 0.000  (posUnscaled) + 0.088 (neg) + 0.078 (reg)
       2: meanAcc=0.954 -- pos wrong:     0/   27; neg wrong:    36/  392;       obj val: 0.202 = 0.000  (posUnscaled) + 0.117 (neg) + 0.085 (reg)
       3: meanAcc=0.960 -- pos wrong:     0/   27; neg wrong:    35/  439;       obj val: 0.211 = 0.000  (posUnscaled) + 0.118 (neg) + 0.094 (reg)
       4: meanAcc=0.963 -- pos wrong:     0/   27; neg wrong:    33/  448;       obj val: 0.227 = 0.000  (posUnscaled) + 0.132 (neg) + 0.095 (reg)
       5: meanAcc=0.969 -- pos wrong:     0/   27; neg wrong:    31/  505;       obj val: 0.244 = 0.000  (posUnscaled) + 0.136 (neg) + 0.107 (reg)
       6: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    35/  532;       obj val: 0.258 = 0.000  (posUnscaled) + 0.143 (neg) + 0.115 (reg)
       7: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    36/  547;       obj val: 0.267 = 0.000  (posUnscaled) + 0.145 (neg) + 0.122 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    39/  588;       obj val: 0.289 = 0.000  (posUnscaled) + 0.158 (neg) + 0.131 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   27; neg wrong:    41/  621;       obj val: 0.301 = 0.000  (posUnscaled) + 0.164 (neg) + 0.137 (reg)
      10: meanAcc=0.966 -- pos wrong:     0/   27; neg wrong:    44/  644;       obj val: 0.310 = 0.000  (posUnscaled) + 0.167 (neg) + 0.143 (reg)
      11: meanAcc=0.970 -- pos wrong:     0/   27; neg wrong:    40/  666;       obj val: 0.314 = 0.000  (posUnscaled) + 0.166 (neg) + 0.148 (reg)
      12: meanAcc=0.971 -- pos wrong:     0/   27; neg wrong:    40/  688;       obj val: 0.320 = 0.000  (posUnscaled) + 0.166 (neg) + 0.154 (reg)
    Pruning easy negatives
         before pruning: #neg = 688
         after pruning: #neg = 509
    Cache holds 27 pos examples and 509 neg examples
    10 pos support vectors
    406 neg support vectors
>>> Updating 21 detector <<<
Cache holds 39 pos examples and 573 neg examples
[LibLinear]       0: meanAcc=0.993 -- pos wrong:     0/   39; neg wrong:     3/  202;       obj val: 0.076 = 0.000  (posUnscaled) + 0.027 (neg) + 0.049 (reg)
       1: meanAcc=0.973 -- pos wrong:     0/   39; neg wrong:    16/  300;       obj val: 0.117 = 0.000  (posUnscaled) + 0.063 (neg) + 0.054 (reg)
       2: meanAcc=0.972 -- pos wrong:     0/   39; neg wrong:    21/  369;       obj val: 0.145 = 0.000  (posUnscaled) + 0.079 (neg) + 0.066 (reg)
       3: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    19/  397;       obj val: 0.151 = 0.000  (posUnscaled) + 0.083 (neg) + 0.069 (reg)
       4: meanAcc=0.976 -- pos wrong:     0/   39; neg wrong:    20/  422;       obj val: 0.179 = 0.000  (posUnscaled) + 0.091 (neg) + 0.088 (reg)
       5: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    27/  447;       obj val: 0.199 = 0.000  (posUnscaled) + 0.105 (neg) + 0.094 (reg)
       6: meanAcc=0.966 -- pos wrong:     0/   39; neg wrong:    31/  462;       obj val: 0.213 = 0.000  (posUnscaled) + 0.111 (neg) + 0.101 (reg)
       7: meanAcc=0.964 -- pos wrong:     0/   39; neg wrong:    35/  483;       obj val: 0.223 = 0.000  (posUnscaled) + 0.113 (neg) + 0.110 (reg)
       8: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    33/  507;       obj val: 0.243 = 0.000  (posUnscaled) + 0.116 (neg) + 0.127 (reg)
       9: meanAcc=0.967 -- pos wrong:     0/   39; neg wrong:    35/  530;       obj val: 0.249 = 0.000  (posUnscaled) + 0.114 (neg) + 0.135 (reg)
      10: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    33/  542;       obj val: 0.262 = 0.000  (posUnscaled) + 0.110 (neg) + 0.152 (reg)
      11: meanAcc=0.970 -- pos wrong:     0/   39; neg wrong:    34/  558;       obj val: 0.263 = 0.000  (posUnscaled) + 0.108 (neg) + 0.154 (reg)
      12: meanAcc=0.969 -- pos wrong:     0/   39; neg wrong:    36/  573;       obj val: 0.283 = 0.000  (posUnscaled) + 0.118 (neg) + 0.165 (reg)
    Pruning easy negatives
         before pruning: #neg = 573
         after pruning: #neg = 400
    Cache holds 39 pos examples and 400 neg examples
    23 pos support vectors
    324 neg support vectors
>>> Updating 22 detector <<<
Cache holds 29 pos examples and 734 neg examples
[LibLinear]       0: meanAcc=0.975 -- pos wrong:     0/   29; neg wrong:    10/  202;       obj val: 0.131 = 0.000  (posUnscaled) + 0.050 (neg) + 0.081 (reg)
       1: meanAcc=0.963 -- pos wrong:     0/   29; neg wrong:    24/  325;       obj val: 0.174 = 0.000  (posUnscaled) + 0.099 (neg) + 0.075 (reg)
       2: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    52/  413;       obj val: 0.232 = 0.000  (posUnscaled) + 0.147 (neg) + 0.085 (reg)
       3: meanAcc=0.943 -- pos wrong:     0/   29; neg wrong:    53/  462;       obj val: 0.246 = 0.000  (posUnscaled) + 0.153 (neg) + 0.092 (reg)
       4: meanAcc=0.932 -- pos wrong:     0/   29; neg wrong:    66/  488;       obj val: 0.274 = 0.000  (posUnscaled) + 0.175 (neg) + 0.099 (reg)
       5: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    70/  539;       obj val: 0.295 = 0.000  (posUnscaled) + 0.184 (neg) + 0.111 (reg)
       6: meanAcc=0.937 -- pos wrong:     0/   29; neg wrong:    71/  565;       obj val: 0.309 = 0.000  (posUnscaled) + 0.190 (neg) + 0.119 (reg)
       7: meanAcc=0.942 -- pos wrong:     0/   29; neg wrong:    69/  599;       obj val: 0.320 = 0.000  (posUnscaled) + 0.193 (neg) + 0.127 (reg)
       8: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    83/  638;       obj val: 0.349 = 0.000  (posUnscaled) + 0.212 (neg) + 0.137 (reg)
       9: meanAcc=0.933 -- pos wrong:     0/   29; neg wrong:    91/  676;       obj val: 0.373 = 0.000  (posUnscaled) + 0.228 (neg) + 0.145 (reg)
      10: meanAcc=0.935 -- pos wrong:     0/   29; neg wrong:    90/  692;       obj val: 0.386 = 0.000  (posUnscaled) + 0.234 (neg) + 0.151 (reg)
      11: meanAcc=0.939 -- pos wrong:     0/   29; neg wrong:    86/  707;       obj val: 0.391 = 0.000  (posUnscaled) + 0.233 (neg) + 0.158 (reg)
      12: meanAcc=0.944 -- pos wrong:     0/   29; neg wrong:    82/  734;       obj val: 0.401 = 0.000  (posUnscaled) + 0.237 (neg) + 0.164 (reg)
    Pruning easy negatives
         before pruning: #neg = 734
         after pruning: #neg = 566
    Cache holds 29 pos examples and 566 neg examples
    17 pos support vectors
    468 neg support vectors
*** EPOCH = 1, VIDEO = 657 *** 
*** EPOCH = 1, VIDEO = 658 *** 
*** EPOCH = 1, VIDEO = 659 *** 
train_with_hard_negatives: 660/660 
>>> Updating 2 detector <<<
Cache holds 29 pos examples and 0 neg examples
Traceback (most recent call last):
  File "svm.py", line 321, in <module>
    svm.train()
  File "svm.py", line 193, in train
    new_w_b = self.trainers[j].append_neg_and_retrain(force=True)
  File "svm.py", line 295, in append_neg_and_retrain
    new_w_b, pos_scores, neg_scores = self.train()
  File "svm.py", line 247, in train
    X = np.vstack((self.pos, self.neg)) * self.feature_scale
  File "/home/sgal/miniconda3/envs/pytorch_0_4/lib/python3.7/site-packages/numpy/core/shape_base.py", line 234, in vstack
    return _nx.concatenate([atleast_2d(_m) for _m in tup], 0)
ValueError: all the input array dimensions except for the concatenation axis must match exactly
