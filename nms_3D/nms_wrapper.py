# --------------------------------------------------------
# Fast R-CNN
# Copyright (c) 2015 Microsoft
# Licensed under The MIT License [see LICENSE for details]
# Written by Ross Girshick
# --------------------------------------------------------
import torch
# from model.utils.config import cfg
if torch.cuda.is_available():
    from .nms_gpu import nms_gpu
from .nms_cpu import nms_cpu

# if torch.cuda.is_available():
#     from .nms_gpu import nms_gpu
# from .nms_cpu import nms_cpu


def nms(dets, thresh, force_cpu=False):
    """Dispatch to either CPU or GPU NMS implementations."""
    if dets.shape[0] == 0:
        return []
    # ---numpy version---
    # original: return gpu_nms(dets, thresh, device_id=cfg.GPU_ID)
    # ---pytorch version---

    return nms_gpu(dets, thresh) if force_cpu == False else nms_cpu(dets, thresh)


if __name__ == '__main__':

    t = torch.Tensor([[  0.0000,  16.3890,  13.1433,  67.7095, 111.0000,  15.0000,   0.5156],
                      [ 42.9755,   0.0000,   4.0117, 111.0000,  32.5160,   5.0062,   0.5131],
                      [ 42.9755,   0.0000,  11.0117, 111.0000,  32.5160,  14.0062,   0.5131],
                      [  0.0000,   0.0000,   9.1690, 111.0000,  55.8332,  15.0000,   0.5131],
                      [  0.0000,  64.0615,  13.9894,  54.1161, 111.0000,  15.0000,   0.5128],
                      [  0.0000,   0.0000,   9.1690, 111.0000,  55.8332,  15.0000,   0.5128],
                      [ 42.9755,   0.0000,   4.0117, 111.0000,  32.5160,  8.0062,   0.5128],
                      [  0.0000,   0.0000,   9.1690, 111.0000,  55.8332,  15.0000,   0.5128],
                      # [  0.0000,  64.0615,  13.9894,  54.1161, 111.0000,  15.0000,   0.5128],
                      # [  0.0000,  18.9223,   1.0186,  84.8860, 111.0000,   9.0215,   0.5128],
                      # [  0.0000,  56.8378,   9.1544, 111.0000, 111.0000,  15.0000,   0.5121],
                      # [  0.0000,  58.7559,  14.1916, 111.0000, 111.0000,  15.0000,   0.5121],
                      # [  0.0000,   0.0000,   9.1046, 111.0000,  55.0195,  15.0000,   0.5121],
                      # [  0.0000,   0.0000,  15.0000, 111.0000,  73.7954,  15.0000,   0.5119],
                      # [ 25.4250,   0.0000,   8.9890, 111.0000,  48.3846,  13.0021,   0.5119],
                      # [ 27.0226,   0.0000,   5.9731, 111.0000,  48.0353,   9.9700,   0.5116],
                      # [  0.0000,  40.3729,   0.9137,  71.2402, 111.0000,  15.0000,   0.5116],
                      # [  0.0000,   0.0000,   1.8591, 111.0000, 111.0000,  15.0000,   0.5116],
                      [  9.2066,   0.0000,  10.0456, 111.0000,  56.2071,  15.0000,   0.5116]]).cuda()
    ret = nms(t, 0.5, force_cpu=False)
